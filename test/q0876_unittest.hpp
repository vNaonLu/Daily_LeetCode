
#ifndef Q876_UNITTEST_H__
#define Q876_UNITTEST_H__
#include <gtest/gtest.h>

#include <vector>

#include "../src/q0876.hpp"
using namespace std;

/**
  * this file is generated by gquestion.py

  *
  * 876. Middle of the Linked List
  *
  * Given the head of a singly linked list, return
  * the middle node of the linked list .
  * If there are two middle nodes, return “the second
  * middle“ node.
  *
  * Constraints:
  * - The number of nodes in the list is in the range [1, 100] .
  * -  1 <= Node.val <= 100 
  *
*/

TEST(q876, sample_input01) {
  ListNode *p = generateListNode({1, 2, 3, 4, 5});
  ListNode *exp = generateListNode({3, 4, 5});
  l876::Solution solver;
  EXPECT_TRUE(compareListNode(solver.middleNode(p), exp));
  releaseListNode(p);
  releaseListNode(exp);
}

TEST(q876, sample_input02) {
  ListNode *p = generateListNode({1, 2, 3, 4, 5, 6});
  ListNode *exp = generateListNode({4, 5, 6});
  l876::Solution solver;
  EXPECT_TRUE(compareListNode(solver.middleNode(p), exp));
  releaseListNode(p);
  releaseListNode(exp);
}

#endif