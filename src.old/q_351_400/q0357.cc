#include <gtest/gtest.h>
#include <iostream>

using namespace std;

/**
 * This file is generated by leetcode_add.py
 *
 * 357.
 *      Count Numbers with Unique Digits
 *
 * ––––––––––––––––––––––––––––– Description –––––––––––––––––––––––––––––
 *
 *   Given an integer ‘n’ , return the count of all numbers with unique
 *   digits, ‘x’ , where ‘0 ≤ x < 10ⁿ’ .
 *
 * ––––––––––––––––––––––––––––– Constraints –––––––––––––––––––––––––––––
 *
 *   • ‘0 ≤ n ≤ 8’
 *
 */

struct q357 : public ::testing::Test {
  // Leetcode answer here
  class Solution {
  public:
    int countNumbersWithUniqueDigits(int n) {
      if (n == 0) {
        return 1;
      } else if (n == 1) {
        return 10;
      } else if (n == 2) {
        return 91;
      } else {
        auto res = (int)91;
        auto dgt = (int)81;
        for (int i = 3; i <= n; ++i) {
          res += (dgt *= (10 - i + 1));
        }
        return res;
      }
    }
  };

  class Solution *solution;
};

TEST_F(q357, sample_input01) {
  solution = new Solution();
  int n    = 2;
  int exp  = 91;
  int act  = solution->countNumbersWithUniqueDigits(n);
  EXPECT_EQ(act, exp);
  delete solution;
}

TEST_F(q357, sample_input02) {
  solution = new Solution();
  int n    = 0;
  int exp  = 1;
  int act  = solution->countNumbersWithUniqueDigits(n);
  EXPECT_EQ(act, exp);
  delete solution;
}