#include <gtest/gtest.h>
#include <iostream>
#include <string>
#include <vector>

using namespace std;

/**
 * This file is generated by leetcode_add.py
 *
 * 2255.
 *       Count Prefixes of a Given String
 *
 * ––––––––––––––––––––––––––––– Description –––––––––––––––––––––––––––––
 *
 *   You are given a string array ‘words’ and a string ‘s’ , where
 *   ‘words[i]’ and ‘s’ comprise only of “lowercase English letters”
 *   Return “the “number of strings” in” ‘words’ “that are a “prefix” of”
 *   ‘s’
 *   A “prefix” of a string is a substring that occurs at the beginning of
 *   the string. A “substring” is a contiguous sequence of characters
 *   within a string.
 *
 * ––––––––––––––––––––––––––––– Constraints –––––––––––––––––––––––––––––
 *
 *   • ‘1 ≤ words.length ≤ 1000’
 *   • ‘1 ≤ words[i].length, s.length ≤ 10’
 *   • ‘words[i]’ and ‘s’ consist of lowercase English letters “only” .
 *
 */

struct q2255 : public ::testing::Test {
  // Leetcode answer here
  class Solution {
  public:
    int countPrefixes(vector<string> &words, string s) {
      int res = 0;
      for (auto &w : words) {
        if (w == s.substr(0, w.size())) {
          ++res;
        }
      }
      return res;
    }
  };

  class Solution *solution;
};

TEST_F(q2255, sample_input01) {
  solution             = new Solution();
  vector<string> words = {"a", "b", "c", "ab", "bc", "abc"};
  string         s     = "abc";
  int            exp   = 3;
  int            act   = solution->countPrefixes(words, s);
  EXPECT_EQ(act, exp);
  delete solution;
}

TEST_F(q2255, sample_input02) {
  solution             = new Solution();
  vector<string> words = {"a", "a"};
  string         s     = "aa";
  int            exp   = 2;
  int            act   = solution->countPrefixes(words, s);
  EXPECT_EQ(act, exp);
  delete solution;
}
