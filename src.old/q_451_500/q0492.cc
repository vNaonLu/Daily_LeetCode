#include <gtest/gtest.h>
#include <cmath>
#include <iostream>
#include <vector>

using namespace std;

/**
 * This file is generated by leetcode_add.py
 *
 * 492.
 *      Construct the Rectangle
 *
 * ––––––––––––––––––––––––––––– Description –––––––––––––––––––––––––––––
 *
 *   A web developer needs to know how to design a web page's size. So,
 *   given a specific rectangular web page&rsquo;s area, your job by now is
 *   to design a rectangular web page, whose length L and width W satisfy
 *   the following
 *       1. The area of the rectangular web page you designed must equal to
 *   the given target
 *       2. The width ‘W’ should not be larger than the length ‘L’ , which
 *   means ‘L ≥ W’
 *       3. The difference between length ‘L’ and width ‘W’ should be as
 *   small as
 *   Return “an array ‘[L, W]’ where ‘L’ and ‘W’ are the length and width
 *   of theweb page you designed in sequence.” 
 *
 * ––––––––––––––––––––––––––––– Constraints –––––––––––––––––––––––––––––
 *
 *   • ‘1 ≤ area ≤ 10⁷’
 *
 */

struct q492 : public ::testing::Test {
  // Leetcode answer here
  class Solution {
   public:
    vector<int> constructRectangle(int area) {
      int l = sqrt(area);
      while (area % l != 0) {
        --l;
      }
      return {area / l, l};
    }
  };

  class Solution *solution;
};

TEST_F(q492, sample_input01) {
  solution = new Solution();
  int area = 4;
  vector<int> exp = {2, 2};
  vector<int> act = solution->constructRectangle(area);
  EXPECT_EQ(act, exp);
  delete solution;
}

TEST_F(q492, sample_input02) {
  solution = new Solution();
  int area = 37;
  vector<int> exp = {37, 1};
  vector<int> act = solution->constructRectangle(area);
  EXPECT_EQ(act, exp);
  delete solution;
}

TEST_F(q492, sample_input03) {
  solution = new Solution();
  int area = 122122;
  vector<int> exp = {427, 286};
  vector<int> act = solution->constructRectangle(area);
  EXPECT_EQ(act, exp);
  delete solution;
}