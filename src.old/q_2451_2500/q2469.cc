#include <gtest/gtest.h>
#include <iostream>
#include <vector>

using namespace std;

/**
 * This file is generated by leetcode_add.py
 *
 * 2469.
 *       Convert the Temperature
 *
 * ––––––––––––––––––––––––––––– Description –––––––––––––––––––––––––––––
 *
 *   You are given a non-negative floating point number rounded to two
 *   decimal places ‘celsius’ , that denotes the “temperature in Celsius”
 *   You should convert Celsius into “Kelvin” and “Fahrenheit” and return
 *   it as an array ‘ans = [kelvin, fahrenheit]’
 *   Return “the array ‘ans’ . ” Answers within ‘10⁻⁵’ of the actual answer
 *   will be
 *    “Note that:”
 *       -  ‘Kelvin = Celsius + 273.15’
 *       -  ‘Fahrenheit = Celsius × 1.80 + 32.00’
 *
 * ––––––––––––––––––––––––––––– Constraints –––––––––––––––––––––––––––––
 *
 *   • ‘0 ≤ celsius ≤ 1000’
 *
 * see more details: https://leetcode.com/problems/convert-the-temperature/
 */

struct q2469 : public ::testing::Test {
  // Leetcode answer here
  class Solution {
  public:
    vector<double> convertTemperature(double celsius) {
      return vector<double>{celsius + 273.15, celsius * 1.8 + 32.};
    }
  };

  class Solution *solution;
};

TEST_F(q2469, sample_input01) {
  solution               = new Solution();
  double         celsius = 36.50;
  vector<double> exp     = {309.65000, 97.70000};
  vector<double> act     = solution->convertTemperature(celsius);
  EXPECT_EQ(act, exp);
  delete solution;
}

TEST_F(q2469, sample_input02) {
  solution               = new Solution();
  double         celsius = 122.11;
  vector<double> exp     = {395.26000, 251.79800};
  vector<double> act     = solution->convertTemperature(celsius);
  EXPECT_EQ(act, exp);
  delete solution;
}
