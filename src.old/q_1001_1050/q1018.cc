#include <gtest/gtest.h>
#include <iostream>
#include <vector>

using namespace std;

/**
 * This file is generated by leetcode_add.py
 *
 * 1018.
 *       Binary Prefix Divisible By 5
 *
 * ––––––––––––––––––––––––––––– Description –––––––––––––––––––––––––––––
 *
 *   You are given a binary array ‘nums’ ( “0-indexed”
 *   We define ‘xᵢ’ as the number whose binary representation is the
 *   subarray ‘nums[0..i]’ (from most-significant-bit to
 *       - For example, if ‘nums = [1,0,1]’ , then ‘x₀ = 1’ , ‘x₁ = 2’ ,
 *   and ‘x₂ = 5’
 *   Return “an array of booleans ” ‘answer’ “ where ” ‘answer[i]’ “ is ”
 *   ‘true’ “ if ” ‘xᵢ’ “ is divisible by ” ‘5’ .
 *
 * ––––––––––––––––––––––––––––– Constraints –––––––––––––––––––––––––––––
 *
 *   • ‘1 ≤ nums.length ≤ 10⁵’
 *   • ‘nums[i]’ is either ‘0’ or ‘1’ .
 *
 */

struct q1018 : public ::testing::Test {
  // Leetcode answer here
  class Solution {
  public:
    vector<bool> prefixesDivBy5(vector<int> &nums) {
      auto res = vector<bool>(nums.size(), false);
      auto beg = nums.begin();
      auto rbg = res.begin();
      auto x   = 0;
      while (beg != nums.end()) {
        x    = ((x << 1) | *beg) % 5;
        *rbg = x == 0;
        ++rbg;
        ++beg;
      }
      return res;
    }
  };

  class Solution *solution;
};

TEST_F(q1018, sample_input01) {
  solution          = new Solution();
  vector<int>  nums = {0, 1, 1};
  vector<bool> exp  = {true, false, false};
  vector<bool> act  = solution->prefixesDivBy5(nums);
  EXPECT_EQ(act, exp);
  delete solution;
}

TEST_F(q1018, sample_input02) {
  solution          = new Solution();
  vector<int>  nums = {1, 1, 1};
  vector<bool> exp  = {false, false, false};
  vector<bool> act  = solution->prefixesDivBy5(nums);
  EXPECT_EQ(act, exp);
  delete solution;
}