#include <gtest/gtest.h>
#include <iostream>
#include <string>

using namespace std;

/**
 * This file is generated by leetcode_add.py
 *
 * 535.
 *      Encode and Decode TinyURL
 *
 * ––––––––––––––––––––––––––––– Description –––––––––––––––––––––––––––––
 *
 *   Note: This is a companion problem to the <a
 *   href="https://leetcode.com/discuss/interview-question/system-design/"
 *   target="_blank">System Design</a> problem: <a
 *   /interview-question/124658/Design-a-URL-Shortener-(-TinyURL-)-System/"
 *   target="_blank">Design
 *   TinyURL is a URL shortening service where you enter a URL such as
 *   ‘https://leetcode.com/problems/design-tinyurl’ and it returns a short
 *   URL such as ‘http://tinyurl.com/4e9iAk’ . Design a class to encode a
 *   URL and decode a tiny
 *   There is no restriction on how your encode/decode algorithm should
 *   work. You just need to ensure that a URL can be encoded to a tiny URL
 *   and the tiny URL can be decoded to the original
 *   Implement the ‘Solution’
 *       -  ‘Solution()’ Initializes the object of the
 *       -  ‘String encode(String longUrl)’ Returns a tiny URL for the
 *   given ‘longUrl’
 *       -  ‘String decode(String shortUrl)’ Returns the original long URL
 *   for the given ‘shortUrl’ . It is guaranteed that the given ‘shortUrl’
 *   was encoded by the same object.
 *
 * ––––––––––––––––––––––––––––– Constraints –––––––––––––––––––––––––––––
 *
 *   • ‘1 ≤ url.length ≤ 10⁴’
 *   • ‘url’ is guranteed to be a valid URL.
 *
 */

struct q535 : public ::testing::Test {
  // Leetcode answer here
  class Solution {
   public:
    // Encodes a URL to a shortened URL.
    string encode(string longUrl) {
      return longUrl;
    }

    // Decodes a shortened URL to its original URL.
    string decode(string shortUrl) {
      return shortUrl;
    }
  };

  // Your Solution object will be instantiated and called as such:
  // Solution solution;
  // solution.decode(solution.encode(url));

  class Solution *solution;
};

TEST_F(q535, sample_input01) {
  solution = new Solution();
  string longUrl = "https://leetcode.com/problems/design-tinyurl";
  string exp = "https://leetcode.com/problems/design-tinyurl";
  string act = solution->encode(longUrl);
  EXPECT_EQ(act, exp);
  delete solution;
}