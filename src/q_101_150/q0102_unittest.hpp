
#ifndef Q102_UNITTEST_H__
#define Q102_UNITTEST_H__
#include <gtest/gtest.h>

#include "q0102.hpp"
using namespace std;

/**
  * this file is generated by gquestion.py
  *
  * 102. Binary Tree Level Order Traversal
  *
  * Given the root of a binary tree, return the level
  * order traversal of its nodes'; values . (i.e.,
  * from left to right, level by level).
  *
  * Constraints:
  * - The number of nodes in the tree is in the range [0, 2000] .
  * -  -1000 <= Node.val <= 1000 
  *
*/

TEST(q102, sample_input01) {
  TreeNode *root = TreeNode::generate({3, 9, 20, NULL_TREENODE, NULL_TREENODE, 15, 7});
  vector<vector<int>> exp = {{3}, {9, 20}, {15, 7}};
  l102::Solution solver;
  EXPECT_EQ(solver.levelOrder(root), exp);
}

TEST(q102, sample_input02) {
  TreeNode *root = TreeNode::generate({1});
  vector<vector<int>> exp = {{1}};
  l102::Solution solver;
  EXPECT_EQ(solver.levelOrder(root), exp);
}

TEST(q102, sample_input03) {
  TreeNode *root = TreeNode::generate({});
  vector<vector<int>> exp = {};
  l102::Solution solver;
  EXPECT_EQ(solver.levelOrder(root), exp);
}

#endif