
#ifndef Q104_UNITTEST_H__
#define Q104_UNITTEST_H__
#include <gtest/gtest.h>

#include "q0104.hpp"
using namespace std;

/**
  * this file is generated by gquestion.py
  *
  * 104. Maximum Depth of Binary Tree
  *
  * Given the root of a binary tree, return its
  * maximum depth .
  * A binary tree';s “maximum depth“ is the number of
  * nodes along the longest path from the root node
  * down to the farthest leaf node.
  *
  * Constraints:
  * - The number of nodes in the tree is in the range [0, 10^(4)] .
  * -  -100 <= Node.val <= 100 
  *
*/

TEST(q104, sample_input01) {
  TreeNode *root = TreeNode::generate({3, 9, 20, NULL_TREENODE, NULL_TREENODE, 15, 7});
  int exp = 3;
  l104::Solution solver;
  EXPECT_EQ(solver.maxDepth(root), exp);
}

TEST(q104, sample_input02) {
  TreeNode *root = TreeNode::generate({1, NULL_TREENODE, 2});
  int exp = 2;
  l104::Solution solver;
  EXPECT_EQ(solver.maxDepth(root), exp);
}

TEST(q104, sample_input03) {
  TreeNode *root = TreeNode::generate({});
  int exp = 0;
  l104::Solution solver;
  EXPECT_EQ(solver.maxDepth(root), exp);
}

TEST(q104, sample_input04) {
  TreeNode *root = TreeNode::generate({0});
  int exp = 1;
  l104::Solution solver;
  EXPECT_EQ(solver.maxDepth(root), exp);
}

#endif