
#ifndef LEETCODE_Q122_H__
#define LEETCODE_Q122_H__
#include <iostream>
#include <vector>

namespace l122 {
using namespace std;

/**
 * This file is generated by leetcode_add.py
 *
 * 122.
 *      Best Time to Buy and Sell Stock II
 *
 * ––––––––––––––––––––––––––––– Description –––––––––––––––––––––––––––––
 *
 *   You are given an integer array ‘prices’ where ‘prices[i]’ is the price
 *   of a given stock on the ‘iᵗʰ’
 *   On each day, you may decide to buy and/or sell the stock. You can only
 *   hold “at most one” share of the stock at any time. However, you can
 *   buy it then immediately sell it on the “same day”
 *   Find and return “the “maximum” profit you can achieve” .
 *
 * ––––––––––––––––––––––––––––– Constraints –––––––––––––––––––––––––––––
 *
 *   • ‘1 ≤ prices.length ≤ 3 × 10⁴’
 *   • ‘0 ≤ prices[i] ≤ 10⁴’
 *
 */

class Solution {
 public:
  int maxProfit(vector<int>& prices) {
    int res = 0;
    for (int i = 1; i < prices.size(); ++i)
      if (prices[i] > prices[i - 1])
        res += prices[i] - prices[i - 1];
    return res;
  }
};
}  // namespace l122

#endif