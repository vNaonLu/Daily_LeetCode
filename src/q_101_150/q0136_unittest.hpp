
#ifndef Q136_UNITTEST_H__
#define Q136_UNITTEST_H__
#include <gtest/gtest.h>

#include "q0136.hpp"
using namespace std;

/**
  * this file is generated by gquestion.py
  *
  * 136. Single Number
  *
  * Given a “non-empty“ array of integers nums ,
  * every element appears twice except for one. Find that
  * single one.
  * You mustimplement a solution with a linear
  * runtime complexity and useonly constantextra space.
  *
  * Constraints:
  * -  1 <= nums.length <= 3 * 10^(4) 
  * -  -3 * 10^(4) <= nums[i] <= 3 * 10^(4) 
  * - Each element in the array appears twice except for one element which appears only once.
  *
*/

TEST(q136, sample_input01) {
  vector<int> nums = {2, 2, 1};
  int exp = 1;
  l136::Solution solver;
  EXPECT_EQ(solver.singleNumber(nums), exp);
}

TEST(q136, sample_input02) {
  vector<int> nums = {4, 1, 2, 1, 2};
  int exp = 4;
  l136::Solution solver;
  EXPECT_EQ(solver.singleNumber(nums), exp);
}

TEST(q136, sample_input03) {
  vector<int> nums = {1};
  int exp = 1;
  l136::Solution solver;
  EXPECT_EQ(solver.singleNumber(nums), exp);
}

#endif