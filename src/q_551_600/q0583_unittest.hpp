
#ifndef Q583_UNITTEST_H__
#define Q583_UNITTEST_H__
#include <gtest/gtest.h>

#include "q0583.hpp"
using namespace std;

/**
  * This file is generated by leetcode_add.py
  *
  * 583.
  *      Delete Operation for Two Strings
  *
  * ––––––––––––––––––––––––––––– Description –––––––––––––––––––––––––––––
  *
  *   Given two strings ‘word1’ and ‘word2’ , return “the minimum number of
  *   “steps” required to make” ‘word1’ “and” ‘word2’ “the same”.
  *   
  *   In one “step” , you can delete exactly one character in either string.
  *
  * ––––––––––––––––––––––––––––– Constraints –––––––––––––––––––––––––––––
  *
  *   • ‘1 ≤ word1.length, word2.length ≤ 500’
  *   • ‘word1’ and ‘word2’ consist of only lowercase English letters.
  *
*/

TEST(q583, sample_input01) {
  l583::Solution solver;
  string word1 = "sea";
  string word2 = "eat";
  int exp = 2;
  EXPECT_EQ(solver.minDistance(word1, word2), exp);
}

TEST(q583, sample_input02) {
  l583::Solution solver;
  string word1 = "leetcode";
  string word2 = "etco";
  int exp = 4;
  EXPECT_EQ(solver.minDistance(word1, word2), exp);
}

#endif