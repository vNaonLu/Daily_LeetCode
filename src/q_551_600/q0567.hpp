
#ifndef LEETCODE_Q567_H__
#define LEETCODE_Q567_H__
#include <algorithm>
#include <iostream>
#include <string>
#include <vector>

namespace l567 {
using namespace std;

/**
  * this file is generated by gquestion.py
  *
  * 567. Permutation in String
  *
  * Given two strings s1 and s2 , return true if s2
  * contains a permutation of s1 , or false otherwise .
  * In other words, return true if one of s1 ';s
  * permutations is the substring of s2 .
  *
  * Constraints:
  * -  1 <= s1.length, s2.length <= 10^(4) 
  * -  s1 and s2 consist of lowercase English letters.
  *
*/
class Solution {
 public:
  bool checkInclusion(string s1, string s2) {
    if (s2.size() >= s1.size()) {
      vector<int> cnt(26), cnt2(26);
      mapping(s1, cnt, 0, s1.size());
      for (int i = 0; i < s2.size() - s1.size() + 1; ++i) {
        mapping(s2, cnt2, i, s1.size());
        if (cnt == cnt2) return true;
      }
    }
    return false;
  }

 private:
  inline void mapping(const string &s, vector<int> &out, int beg, size_t len) {
    fill(out.begin(), out.end(), 0);
    for (int i = 0; i < len; ++i) ++out[s[beg + i] - 'a'];
  }
};
}  // namespace l567
#endif