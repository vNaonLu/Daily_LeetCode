
#ifndef Q561_UNITTEST_H__
#define Q561_UNITTEST_H__
#include <gtest/gtest.h>

#include "q0561.hpp"
using namespace std;

/**
 * This file is generated by leetcode_add.py
 *
 * 561.
 *      Array Partition I
 *
 * ––––––––––––––––––––––––––––– Description –––––––––––––––––––––––––––––
 *
 *   Given an integer array ‘nums’ of ‘2n’ integers, group these integers
 *   into ‘n’ pairs ‘(a₁, b₁), (a₂, b₂), ..., (aₙ, bₙ)’ such that the sum
 *   of ‘min(aᵢ, bᵢ)’ for all ‘i’ is “maximized” . Return “ the maximized
 *   sum” .
 *
 * ––––––––––––––––––––––––––––– Constraints –––––––––––––––––––––––––––––
 *
 *   • ‘1 ≤ n ≤ 10⁴’
 *   • ‘nums.length = 2 × n’
 *   • ‘-10⁴ ≤ nums[i] ≤ 10⁴’
 *
 */

TEST(q561, sample_input01) {
  l561::Solution solver;
  vector<int> nums = {1, 4, 3, 2};
  int exp = 4;
  EXPECT_EQ(solver.arrayPairSum(nums), exp);
}

TEST(q561, sample_input02) {
  l561::Solution solver;
  vector<int> nums = {6, 2, 6, 5, 1, 2};
  int exp = 9;
  EXPECT_EQ(solver.arrayPairSum(nums), exp);
}

#endif