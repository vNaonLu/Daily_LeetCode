
#ifndef Q377_UNITTEST_H__
#define Q377_UNITTEST_H__
#include <gtest/gtest.h>

#include "q0377.hpp"
using namespace std;

/**
 * This file is generated by leetcode_add.py
 *
 * 377.
 *      Combination Sum IV
 *
 * ––––––––––––––––––––––––––––– Description –––––––––––––––––––––––––––––
 *
 *   Given an array of “distinct” integers ‘nums’ and a target integer
 *   ‘target’ , return “the number of possible combinations that add up to”
 *    ‘target’
 *   The answer is “guaranteed” to fit in a “32-bit” integer.
 *
 * ––––––––––––––––––––––––––––– Constraints –––––––––––––––––––––––––––––
 *
 *   • ‘1 ≤ nums.length ≤ 200’
 *   • ‘1 ≤ nums[i] ≤ 1000’
 *   • All the elements of ‘nums’ are “unique” .
 *   • ‘1 ≤ target ≤ 1000’
 *
 */

TEST(q377, sample_input01) {
  l377::Solution solver;
  vector<int> nums = {1, 2, 3};
  int target = 4;
  int exp = 7;
  EXPECT_EQ(solver.combinationSum4(nums, target), exp);
}

TEST(q377, sample_input02) {
  l377::Solution solver;
  vector<int> nums = {9};
  int target = 3;
  int exp = 0;
  EXPECT_EQ(solver.combinationSum4(nums, target), exp);
}

#endif