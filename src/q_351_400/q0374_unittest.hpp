
#ifndef Q374_UNITTEST_H__
#define Q374_UNITTEST_H__
#include <gtest/gtest.h>

#include "q0374.hpp"
using namespace std;

/**
  * This file is generated by leetcode_add.py
  *
  * 374.
  *      Guess Number Higher or Lower
  *
  * ––––––––––––––––––––––––––––– Description –––––––––––––––––––––––––––––
  *
  *   We are playing the Guess Game. The game is as.
  *   
  *   I pick a number from ‘1’ to ‘n’ . You have to guess which number I
  *   picked.
  *   
  *   Every time you guess wrong, I will tell you whether the number I
  *   picked is higher or lower than your guess.
  *   
  *   You call a pre-defined API ‘int guess(int num)’ , which returns 3
  *   possible.
  *   
  *   - ‘-1’ : The number I picked is lower than your guess (i.e. ‘pick <
  *   num’ ).
  *   
  *   - ‘1’ : The number I picked is higher than your guess (i.e. ‘pick >
  *   num’ ).
  *   
  *   - ‘0’ : The number I picked is equal to your guess (i.e. ‘pick = num’
  *   ).
  *   
  *   Return “the number that I picked”.
  *
  * ––––––––––––––––––––––––––––– Constraints –––––––––––––––––––––––––––––
  *
  *   • ‘1 ≤ n ≤ 2³¹ - 1’
  *   • ‘1 ≤ pick ≤ n’
  *
*/

TEST(q374, sample_input01) {
  l374::Solution solver;
  int n = 10;
  l374::pick = 6;
  int exp = 6;
  EXPECT_EQ(solver.guessNumber(n), exp);
}

TEST(q374, sample_input02) {
  l374::Solution solver;
  int n = 1;
  l374::pick = 1;
  int exp = 1;
  EXPECT_EQ(solver.guessNumber(n), exp);
}

TEST(q374, sample_input03) {
  l374::Solution solver;
  int n = 2;
  l374::pick = 1;
  int exp = 1;
  EXPECT_EQ(solver.guessNumber(n), exp);
}

TEST(q374, sample_input04) {
  l374::Solution solver;
  int n = 2;
  l374::pick = 2;
  int exp = 2;
  EXPECT_EQ(solver.guessNumber(n), exp);
}

#endif