
#ifndef LEETCODE_Q392_H__
#define LEETCODE_Q392_H__
#include <iostream>
#include <string>

namespace l392 {
using namespace std;

/**
 * This file is generated by leetcode_add.py
 *
 * 392.
 *      Is Subsequence
 *
 * ––––––––––––––––––––––––––––– Description –––––––––––––––––––––––––––––
 *
 *   Given two strings ‘s’ and ‘t’ , return ‘true’ “ if ” ‘s’ “ is a
 *   “subsequence” of ” ‘t’ “, or ” ‘false’ “ otherwise”
 *   A “subsequence” of a string is a new string that is formed from the
 *   original string by deleting some (can be none) of the characters
 *   without disturbing the relative positions of the remaining characters.
 *   (i.e., ‘'ace'’ is a subsequence of ‘'<u>a</u>b<u>c</u>d<u>e</u>'’
 *   while ‘'aec'’ is not).
 *
 * ––––––––––––––––––––––––––––– Constraints –––––––––––––––––––––––––––––
 *
 *   • ‘0 ≤ s.length ≤ 100’
 *   • ‘0 ≤ t.length ≤ 10⁴’
 *   • ‘s’ and ‘t’ consist only of lowercase English letters.
 *
 */

class Solution {
 public:
  bool isSubsequence(string s, string t) {
    int res = 0;
    int i = 0;
    while (res < s.size() && i < t.size()) {
      if (t[i++] == s[res]) {
        ++res;
      }
    }
    return res == s.size();
  }
};
}  // namespace l392

#endif