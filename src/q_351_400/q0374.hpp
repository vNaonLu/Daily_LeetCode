
#ifndef LEETCODE_Q374_H__
#define LEETCODE_Q374_H__
#include <iostream>

namespace l374 {
using namespace std;

/**
  * This file is generated by leetcode_add.py
  *
  * 374.
  *      Guess Number Higher or Lower
  *
  * ––––––––––––––––––––––––––––– Description –––––––––––––––––––––––––––––
  *
  *   We are playing the Guess Game. The game is as.
  *   
  *   I pick a number from ‘1’ to ‘n’ . You have to guess which number I
  *   picked.
  *   
  *   Every time you guess wrong, I will tell you whether the number I
  *   picked is higher or lower than your guess.
  *   
  *   You call a pre-defined API ‘int guess(int num)’ , which returns 3
  *   possible.
  *   
  *   - ‘-1’ : The number I picked is lower than your guess (i.e. ‘pick <
  *   num’ ).
  *   
  *   - ‘1’ : The number I picked is higher than your guess (i.e. ‘pick >
  *   num’ ).
  *   
  *   - ‘0’ : The number I picked is equal to your guess (i.e. ‘pick = num’
  *   ).
  *   
  *   Return “the number that I picked”.
  *
  * ––––––––––––––––––––––––––––– Constraints –––––––––––––––––––––––––––––
  *
  *   • ‘1 ≤ n ≤ 2³¹ - 1’
  *   • ‘1 ≤ pick ≤ n’
  *
*/

int pick = 0;
int guess(const int &guess) noexcept {
  if (guess == pick)
    return 0;
  else if (guess > pick)
    return -1;
  else
    return 1;
}

/** 
 * Forward declaration of guess API.
 * @param  num   your guess
 * @return 	     -1 if num is lower than the guess number
 *			      1 if num is higher than the guess number
 *               otherwise return 0
 * int guess(int num);
 */

class Solution {
 public:
  int guessNumber(int n) {
    int l = 1, r = n;
    int mid = 0;
    while (l <= r) {
      mid = l + (r - l) / 2;
      int g = guess(mid);
      if (g < 0) {
        r = mid - 1;
      } else if (g > 0) {
        l = mid + 1;
      } else
        break;
    }
    return mid;
  }
};
}  // namespace l374

#endif