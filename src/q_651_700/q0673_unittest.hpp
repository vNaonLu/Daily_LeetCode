
#ifndef Q673_UNITTEST_H__
#define Q673_UNITTEST_H__
#include <gtest/gtest.h>

#include "q0673.hpp"
using namespace std;

/**
  * This file is generated by leetcode_add.py
  *
  * 673.
  *      Number of Longest Increasing Subsequence
  *
  * ––––––––––––––––––––––––––––– Description –––––––––––––––––––––––––––––
  *
  *   Given an integer array ‘nums’ , return “the number of longest
  *   increasing subsequences.”.
  *   
  *   “Notice” that the sequence has to be “strictly” increasing.
  *
  * ––––––––––––––––––––––––––––– Constraints –––––––––––––––––––––––––––––
  *
  *   • ‘1 ≤ nums.length ≤ 2000’
  *   • ‘-10⁶ ≤ nums[i] ≤ 10⁶’
  *
*/

TEST(q673, sample_input01) {
  l673::Solution solver;
  vector<int> nums = {1, 3, 5, 4, 7};
  int exp = 2;
  EXPECT_EQ(solver.findNumberOfLIS(nums), exp);
}

TEST(q673, sample_input02) {
  l673::Solution solver;
  vector<int> nums = {2, 2, 2, 2, 2};
  int exp = 5;
  EXPECT_EQ(solver.findNumberOfLIS(nums), exp);
}

#endif