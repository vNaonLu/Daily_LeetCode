
#ifndef LEETCODE_Q668_H__
#define LEETCODE_Q668_H__
#include <iostream>

namespace l668 {
using namespace std;

/**
 * This file is generated by leetcode_add.py
 *
 * 668.
 *      Kth Smallest Number in Multiplication Table
 *
 * ––––––––––––––––––––––––––––– Description –––––––––––––––––––––––––––––
 *
 *   Nearly everyone has used the <a
 *   href="https://en.wikipedia.org/wiki/Multiplication_table"
 *   target="_blank">Multiplication Table</a>. The multiplication table of
 *   size ‘m x n’ is an integer matrix ‘mat’ where ‘mat[i][j] = i × j’ (
 *   “1-indexed”
 *   Given three integers ‘m’ , ‘n’ , and ‘k’ , return “the ” ‘kᵗʰ’ “
 *   smallest element in the ” ‘m x n’ “ multiplication table” .
 *
 * ––––––––––––––––––––––––––––– Constraints –––––––––––––––––––––––––––––
 *
 *   • ‘1 ≤ m, n ≤ 3 × 10⁴’
 *   • ‘1 ≤ k ≤ m × n’
 *
 */

class Solution {
 private:
  bool helper(int x, int m, int n, int k) {
    int count = 0;
    for (int i = 1; i <= m; ++i) {
      count += min(n, x / i);
    }
    return count >= k;
  }

 public:
  int findKthNumber(int m, int n, int k) {
    int L = 1, R = m * n;
    while (R > L) {
      int M = L + (R - L) / 2;
      if (helper(M, m, n, k))
        R = M;
      else
        L = M + 1;
    }
    return L;
  }
};
}  // namespace l668

#endif