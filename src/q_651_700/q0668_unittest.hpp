
#ifndef Q668_UNITTEST_H__
#define Q668_UNITTEST_H__
#include <gtest/gtest.h>

#include "q0668.hpp"
using namespace std;

/**
 * This file is generated by leetcode_add.py
 *
 * 668.
 *      Kth Smallest Number in Multiplication Table
 *
 * ––––––––––––––––––––––––––––– Description –––––––––––––––––––––––––––––
 *
 *   Nearly everyone has used the <a
 *   href="https://en.wikipedia.org/wiki/Multiplication_table"
 *   target="_blank">Multiplication Table</a>. The multiplication table of
 *   size ‘m x n’ is an integer matrix ‘mat’ where ‘mat[i][j] = i × j’ (
 *   “1-indexed”
 *   Given three integers ‘m’ , ‘n’ , and ‘k’ , return “the ” ‘kᵗʰ’ “
 *   smallest element in the ” ‘m x n’ “ multiplication table” .
 *
 * ––––––––––––––––––––––––––––– Constraints –––––––––––––––––––––––––––––
 *
 *   • ‘1 ≤ m, n ≤ 3 × 10⁴’
 *   • ‘1 ≤ k ≤ m × n’
 *
 */

TEST(q668, sample_input01) {
  l668::Solution solver;
  int m = 3;
  int n = 3;
  int k = 5;
  int exp = 3;
  EXPECT_EQ(solver.findKthNumber(m, n, k), exp);
}

TEST(q668, sample_input02) {
  l668::Solution solver;
  int m = 2;
  int n = 3;
  int k = 6;
  int exp = 6;
  EXPECT_EQ(solver.findKthNumber(m, n, k), exp);
}

#endif