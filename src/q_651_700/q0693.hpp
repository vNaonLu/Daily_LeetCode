
#ifndef LEETCODE_Q693_H__
#define LEETCODE_Q693_H__
#include <iostream>

namespace l693 {
using namespace std;

/**
  * This file is generated by leetcode_add.py
  *
  * 693.
  *      Binary Number with Alternating Bits
  *
  * ––––––––––––––––––––––––––––– Description –––––––––––––––––––––––––––––
  *
  *   Given a positive integer, check whether it has alternating bits:
  *   namely, if two adjacent bits will always have different values.
  *
  * ––––––––––––––––––––––––––––– Constraints –––––––––––––––––––––––––––––
  *
  *   • ‘1 ≤ n ≤ 2³¹ - 1’
  *
*/

class Solution {
 public:
  bool hasAlternatingBits(int n) {
    bool prev = n & 1;
    n >>= 1;
    while (n != 0) {
      bool current = n & 1;
      if (prev == current) return false;
      prev = current;
      n >>= 1;
    }
    return true;
  }
};
}  // namespace l693

#endif