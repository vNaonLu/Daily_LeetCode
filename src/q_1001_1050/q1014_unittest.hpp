
#ifndef Q1014_UNITTEST_H__
#define Q1014_UNITTEST_H__
#include <gtest/gtest.h>

#include "q1014.hpp"
using namespace std;

/**
 * This file is generated by leetcode_add.py
 *
 * 1014.
 *       Best Sightseeing Pair
 *
 * ––––––––––––––––––––––––––––– Description –––––––––––––––––––––––––––––
 *
 *   You are given an integer array ‘values’ where values[i] represents the
 *   value of the ‘iᵗʰ’ sightseeing spot. Two sightseeing spots ‘i’ and ‘j’
 *   have a “distance” ‘j - i’ between
 *   The score of a pair ( ‘i < j’ ) of sightseeing spots is ‘values[i] +
 *   values[j] + i - j’ : the sum of the values of the sightseeing spots,
 *   minus the distance between
 *   Return “the maximum score of a pair of sightseeing spots” .
 *
 * ––––––––––––––––––––––––––––– Constraints –––––––––––––––––––––––––––––
 *
 *   • ‘2 ≤ values.length ≤ 5 × 10⁴’
 *   • ‘1 ≤ values[i] ≤ 1000’
 *
 */

TEST(q1014, sample_input01) {
  l1014::Solution solver;
  vector<int> values = {8, 1, 5, 2, 6};
  int exp = 11;
  EXPECT_EQ(solver.maxScoreSightseeingPair(values), exp);
}

TEST(q1014, sample_input02) {
  l1014::Solution solver;
  vector<int> values = {1, 2};
  int exp = 2;
  EXPECT_EQ(solver.maxScoreSightseeingPair(values), exp);
}

#endif