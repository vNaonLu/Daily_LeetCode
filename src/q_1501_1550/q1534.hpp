
#ifndef LEETCODE_Q1534_H__
#define LEETCODE_Q1534_H__
#include <iostream>
#include <vector>

namespace l1534 {
using namespace std;

/**
  * This file is generated by leetcode_add.py
  *
  * 1534.
  *       Count Good Triplets
  *
  * ––––––––––––––––––––––––––––– Description –––––––––––––––––––––––––––––
  *
  *   Given an array of integers ‘arr’ , and three integers ‘a’ , ‘b’ and
  *   ‘c’ . You need to find the number of good triplets.
  *   
  *   A triplet ‘(arr[i], arr[j], arr[k])’ is “good” if the following
  *   conditions are.
  *   
  *   - ‘0 ≤ i < j < k <arr.length’.
  *   
  *   - ‘|arr[i] - arr[j]| ≤ a’.
  *   
  *   - ‘|arr[j] - arr[k]| ≤ b’.
  *   
  *   - ‘|arr[i] - arr[k]| ≤ c’.
  *   
  *   Where ‘|x|’ denotes the absolute value of ‘x’.
  *   
  *   Return “ the number of good triplets”.
  *
  * ––––––––––––––––––––––––––––– Constraints –––––––––––––––––––––––––––––
  *
  *   • ‘3 ≤ arr.length ≤ 100’
  *   • ‘0 ≤ arr[i] ≤ 1000’
  *   • ‘0 ≤ a, b, c ≤ 1000’
  *
*/

class Solution {
 public:
  int countGoodTriplets(vector<int>& arr, int a, int b, int c) {
    int res = 0;
    for (int i = 0; i < arr.size(); ++i) {
      for (int j = i + 1; j < arr.size(); ++j) {
        if (abs(arr[j] - arr[i]) <= a) {
          for (int k = j + 1; k < arr.size(); k++) {
            if (abs(arr[k] - arr[j]) <= b &&
                abs(arr[k] - arr[i]) <= c)
              ++res;
          }
        }
      }
    }
    return res;
  }
};
}  // namespace l1534

#endif