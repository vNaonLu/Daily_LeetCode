#include <gtest/gtest.h>
#include <iostream>
#include <vector>

using namespace std;

/**
 * This file is generated by leetcode_add.py v1.0
 *
 * 1534.
 *       Count Good Triplets
 *
 * ––––––––––––––––––––––––––––– Description –––––––––––––––––––––––––––––
 *
 *   Given an array of integers ‘arr’ , and three integers ‘a’ , ‘b’ and
 *   ‘c’ . You need to find the number of good
 *   A triplet ‘(arr[i], arr[j], arr[k])’ is “good” if the following
 *   conditions are
 *       -  ‘0 ≤ i < j < k <arr.length’
 *       -  ‘|arr[i] - arr[j]| ≤ a’
 *       -  ‘|arr[j] - arr[k]| ≤ b’
 *       -  ‘|arr[i] - arr[k]| ≤ c’
 *   Where ‘|x|’ denotes the absolute value of ‘x’
 *   Return “ the number of good triplets”
 *   
 *
 * ––––––––––––––––––––––––––––– Constraints –––––––––––––––––––––––––––––
 *
 *   • ‘3 ≤ arr.length ≤ 100’
 *   • ‘0 ≤ arr[i] ≤ 1000’
 *   • ‘0 ≤ a, b, c ≤ 1000’
 *
 */

struct q1534 : public ::testing::Test {
  // Leetcode answer here
  class Solution {
   public:
    int countGoodTriplets(vector<int>& arr, int a, int b, int c) {
      int res = 0;
      for (int i = 0; i < arr.size(); ++i) {
        for (int j = i + 1; j < arr.size(); ++j) {
          if (abs(arr[j] - arr[i]) <= a) {
            for (int k = j + 1; k < arr.size(); k++) {
              if (abs(arr[k] - arr[j]) <= b &&
                  abs(arr[k] - arr[i]) <= c)
                ++res;
            }
          }
        }
      }
      return res;
    }
  };

  class Solution *solution;
};

TEST_F(q1534, sample_input01) {
  solution = new Solution();
  vector<int> arr = {3, 0, 1, 1, 9, 7};
  int a = 7;
  int b = 2;
  int c = 3;
  int exp = 4;
  EXPECT_EQ(solution->countGoodTriplets(arr, a, b, c), exp);
  delete solution;
}

TEST_F(q1534, sample_input02) {
  solution = new Solution();
  vector<int> arr = {1, 1, 2, 2, 3};
  int a = 0;
  int b = 0;
  int c = 1;
  int exp = 0;
  EXPECT_EQ(solution->countGoodTriplets(arr, a, b, c), exp);
  delete solution;
}