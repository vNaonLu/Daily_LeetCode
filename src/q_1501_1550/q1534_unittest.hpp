
#ifndef Q1534_UNITTEST_H__
#define Q1534_UNITTEST_H__
#include <gtest/gtest.h>

#include "q1534.hpp"
using namespace std;

/**
  * This file is generated by leetcode_add.py
  *
  * 1534.
  *       Count Good Triplets
  *
  * ––––––––––––––––––––––––––––– Description –––––––––––––––––––––––––––––
  *
  *   Given an array of integers ‘arr’ , and three integers ‘a’ , ‘b’ and
  *   ‘c’ . You need to find the number of good triplets.
  *   
  *   A triplet ‘(arr[i], arr[j], arr[k])’ is “good” if the following
  *   conditions are.
  *   
  *   - ‘0 ≤ i < j < k <arr.length’.
  *   
  *   - ‘|arr[i] - arr[j]| ≤ a’.
  *   
  *   - ‘|arr[j] - arr[k]| ≤ b’.
  *   
  *   - ‘|arr[i] - arr[k]| ≤ c’.
  *   
  *   Where ‘|x|’ denotes the absolute value of ‘x’.
  *   
  *   Return “ the number of good triplets”.
  *
  * ––––––––––––––––––––––––––––– Constraints –––––––––––––––––––––––––––––
  *
  *   • ‘3 ≤ arr.length ≤ 100’
  *   • ‘0 ≤ arr[i] ≤ 1000’
  *   • ‘0 ≤ a, b, c ≤ 1000’
  *
*/

TEST(q1534, sample_input01) {
  l1534::Solution solver;
  vector<int> arr = {3, 0, 1, 1, 9, 7};
  int a = 7;
  int b = 2;
  int c = 3;
  int exp = 4;
  EXPECT_EQ(solver.countGoodTriplets(arr, a, b, c), exp);
}

TEST(q1534, sample_input02) {
  l1534::Solution solver;
  vector<int> arr = {1, 1, 2, 2, 3};
  int a = 0;
  int b = 0;
  int c = 1;
  int exp = 0;
  EXPECT_EQ(solver.countGoodTriplets(arr, a, b, c), exp);
}

#endif