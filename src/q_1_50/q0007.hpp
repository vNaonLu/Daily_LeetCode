
#ifndef LEETCODE_Q7_H__
#define LEETCODE_Q7_H__
#include <iostream>
#include <limits>

namespace l7 {
using namespace std;

/**
  * This file is generated by leetcode_add.py
  *
  * 7.
  *    Reverse Integer
  *
  * ––––––––––––––––––––––––––––– Description –––––––––––––––––––––––––––––
  *
  *   Given a signed 32-bit integer ‘x’ , return ‘x’ “ with its digits
  *   reversed” . If reversing ‘x’ causes the value to go outside the signed
  *   32-bit integer range ‘[-2³¹, 2³¹ - 1]’ , then return ‘0’.
  *   
  *   “Assume the environment does not allow you to store 64-bit integers
  *   (signed or unsigned).”.
  *
  * ––––––––––––––––––––––––––––– Constraints –––––––––––––––––––––––––––––
  *
  *   • ‘-2³¹ ≤ x ≤ 2³¹ - 1’
  *
*/

class Solution {
 public:
  int reverse(int x) {
    int sign = x < 0 ? -1 : 1;
    long long res = 0;
    x = abs(x);
    while (x > 0) {
      res = res * 10 + x % 10;
      x /= 10;
    }
    res *= sign;
    return res > numeric_limits<int>::max() ? 0 : res < numeric_limits<int>::min() ? 0
                                                                                   : res;
  }
};
}  // namespace l7

#endif