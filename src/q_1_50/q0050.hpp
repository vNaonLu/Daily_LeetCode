
#ifndef LEETCODE_Q50_H__
#define LEETCODE_Q50_H__
#include <iostream>

namespace l50 {
using namespace std;

/**
 * This file is generated by leetcode_add.py
 *
 * 50.
 *     Pow(x, n)
 *
 * ––––––––––––––––––––––––––––– Description –––––––––––––––––––––––––––––
 *
 *   Implement <a href="http://www.cplusplus.com/reference/valarray/pow/"
 *   target="_blank">pow(x, n)</a>, which calculates ‘x’ raised to the
 *   power ‘n’ (i.e., ‘xⁿ’ ).
 *
 * ––––––––––––––––––––––––––––– Constraints –––––––––––––––––––––––––––––
 *
 *   • ‘-100.0 <x< 100.0’
 *   • ‘-2³¹≤ n ≤2³¹-1’
 *   • ‘-10⁴ ≤ xⁿ ≤ 10⁴’
 *
 */

class Solution {
 public:
  double myPow(double x, int n) {
    double res = 1.0;
    long long y = n;
    while (abs(n)) {
      if (abs(n) % 2)
        res = res * x;
      x = x * x;
      n = abs(n) / 2;
    }

    if (y < 0)
      res = (double)(1.0) / (double)(res);
    return res;
  }
};
}  // namespace l50

#endif