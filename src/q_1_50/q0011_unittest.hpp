
#ifndef Q11_UNITTEST_H__
#define Q11_UNITTEST_H__
#include <gtest/gtest.h>

#include "q0011.hpp"
using namespace std;

/**
  * this file is generated by gquestion.py
  *
  * 11. Container With Most Water
  *
  * Given n non-negative integers a⎽(1), a⎽(2), ...,
  * a⎽(n) ⎽( ), where each represents a point at
  * coordinate (i, a⎽(i)) . n vertical lines are drawn such
  * that the two endpoints of the line i is at (i,
  * a⎽(i)) and (i, 0) . Find two lines, which, together
  * with the x-axis forms a container, such that the
  * container contains the most water.
  * “Notice“ that you may not slant the container.
  *
  * Constraints:
  * -  n == height.length 
  * -  2 <= n <= 10^(5) 
  * -  0 <= height[i] <= 10^(4) 
  *
*/

TEST(q11, sample_input01) {
  vector<int> height = {1, 8, 6, 2, 5, 4, 8, 3, 7};
  int exp = 49;
  l11::Solution solver;
  EXPECT_EQ(solver.maxArea(height), exp);
}

TEST(q11, sample_input02) {
  vector<int> height = {1, 1};
  int exp = 1;
  l11::Solution solver;
  EXPECT_EQ(solver.maxArea(height), exp);
}

TEST(q11, sample_input03) {
  vector<int> height = {4, 3, 2, 1, 4};
  int exp = 16;
  l11::Solution solver;
  EXPECT_EQ(solver.maxArea(height), exp);
}

TEST(q11, sample_input04) {
  vector<int> height = {1, 2, 1};
  int exp = 2;
  l11::Solution solver;
  EXPECT_EQ(solver.maxArea(height), exp);
}

#endif