
#ifndef Q9_UNITTEST_H__
#define Q9_UNITTEST_H__
#include <gtest/gtest.h>

#include "q0009.hpp"
using namespace std;

/**
  * This file is generated by leetcode_add.py
  *
  * 9.
  *    Palindrome Number
  *
  * ––––––––––––––––––––––––––––– Description –––––––––––––––––––––––––––––
  *
  *   Given an integer ‘x’ , return ‘true’ if ‘x’ is palindrome integer.
  *   
  *   An integer is a “palindrome” when it reads the same backward as
  *   forward. For example, ‘121’ is palindrome while ‘123’ is not.
  *
  * ––––––––––––––––––––––––––––– Constraints –––––––––––––––––––––––––––––
  *
  *   • ‘-2³¹≤ x ≤ 2³¹- 1’
  *
*/

TEST(q9, sample_input01) {
  l9::Solution solver;
  int x = 121;
  bool exp = true;
  EXPECT_EQ(solver.isPalindrome(x), exp);
}

TEST(q9, sample_input02) {
  l9::Solution solver;
  int x = -121;
  bool exp = false;
  EXPECT_EQ(solver.isPalindrome(x), exp);
}

TEST(q9, sample_input03) {
  l9::Solution solver;
  int x = 10;
  bool exp = false;
  EXPECT_EQ(solver.isPalindrome(x), exp);
}

TEST(q9, sample_input04) {
  l9::Solution solver;
  int x = -101;
  bool exp = false;
  EXPECT_EQ(solver.isPalindrome(x), exp);
}

#endif