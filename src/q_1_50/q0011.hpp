
#ifndef LEETCODE_Q11_H__
#define LEETCODE_Q11_H__
#include <algorithm>
#include <iostream>
#include <vector>

namespace l11 {
using namespace std;

/**
  * this file is generated by gquestion.py
  *
  * 11. Container With Most Water
  *
  * Given n non-negative integers a⎽(1), a⎽(2), ...,
  * a⎽(n) ⎽( ), where each represents a point at
  * coordinate (i, a⎽(i)) . n vertical lines are drawn such
  * that the two endpoints of the line i is at (i,
  * a⎽(i)) and (i, 0) . Find two lines, which, together
  * with the x-axis forms a container, such that the
  * container contains the most water.
  * “Notice“ that you may not slant the container.
  *
  * Constraints:
  * -  n == height.length 
  * -  2 <= n <= 10^(5) 
  * -  0 <= height[i] <= 10^(4) 
  *
*/
class Solution {
 public:
  int maxArea(vector<int>& height) {
    int res = 0;
    int l = 0, r = height.size() - 1;
    while (l < r) {
      res = max(res, min(height[l], height[r]) * (r - l));
      if (height[l] <= height[r]) {
        ++l;
      } else {
        --r;
      }
    }
    return res;
  }
};
}  // namespace l11
#endif