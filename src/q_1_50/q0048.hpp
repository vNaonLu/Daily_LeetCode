
#ifndef LEETCODE_Q48_H__
#define LEETCODE_Q48_H__
#include <iostream>
#include <vector>

namespace l48 {
using namespace std;

/**
  * this file is generated by gquestion.py
  *
  * 48. Rotate Image
  *
  * You are given an n x n 2D matrix representing an
  * image, rotate the image by “90“ degrees
  * (clockwise).
  * You have to rotate the image <a
  * href="https://en.wikipedia.org/wiki/In-place_algorithm"
  * target="_blank"> “in-place“ </a>, which means you have to
  * modify the input 2D matrix directly. “DO NOT“
  * allocate another 2D matrix and do the rotation.
  *
  * Constraints:
  * -  matrix.length == n 
  * -  matrix[i].length == n 
  * -  1 <= n <= 20 
  * -  -1000 <= matrix[i][j] <= 1000 
  *
*/
class Solution {
 public:
  void rotate(vector<vector<int>>& matrix) {
    int n = matrix.size();
    vector<vector<int>> res(n, vector<int>(n, 1));
    for (int i = n - 1; i >= 0; --i) {
      for (int j = 0; j < n; ++j) {
        res[j][n - i - 1] = matrix[i][j];
      }
    }
    matrix = res;
  }
};
}  // namespace l48
#endif