
#ifndef Q32_UNITTEST_H__
#define Q32_UNITTEST_H__
#include <gtest/gtest.h>

#include "q0032.hpp"
using namespace std;

/**
 * This file is generated by leetcode_add.py
 *
 * 32.
 *     Longest Valid Parentheses
 *
 * ––––––––––––––––––––––––––––– Description –––––––––––––––––––––––––––––
 *
 *   Given a string containing just the characters ‘'('’ and ‘')'’ , find
 *   the length of the longest valid (well-formed) parentheses substring.
 *
 * ––––––––––––––––––––––––––––– Constraints –––––––––––––––––––––––––––––
 *
 *   • ‘0 ≤ s.length ≤ 3 × 10⁴’
 *   • ‘s[i]’ is ‘'('’ , or ‘')'’ .
 *
 */

TEST(q32, sample_input01) {
  l32::Solution solver;
  string s = "(()";
  int exp = 2;
  EXPECT_EQ(solver.longestValidParentheses(s), exp);
}

TEST(q32, sample_input02) {
  l32::Solution solver;
  string s = ")()())";
  int exp = 4;
  EXPECT_EQ(solver.longestValidParentheses(s), exp);
}

TEST(q32, sample_input03) {
  l32::Solution solver;
  string s = "";
  int exp = 0;
  EXPECT_EQ(solver.longestValidParentheses(s), exp);
}

#endif