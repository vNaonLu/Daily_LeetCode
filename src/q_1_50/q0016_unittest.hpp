
#ifndef Q16_UNITTEST_H__
#define Q16_UNITTEST_H__
#include <gtest/gtest.h>

#include "q0016.hpp"
using namespace std;

/**
 * This file is generated by leetcode_add.py
 *
 * 16.
 *     3Sum Closest
 *
 * ––––––––––––––––––––––––––––– Description –––––––––––––––––––––––––––––
 *
 *   Given an integer array ‘nums’ of length ‘n’ and an integer ‘target’ ,
 *   find three integers in ‘nums’ such that the sum is closest to ‘target’
 *   Return “the sum of the three integers”
 *   You may assume that each input would have exactly one solution.
 *
 * ––––––––––––––––––––––––––––– Constraints –––––––––––––––––––––––––––––
 *
 *   • ‘3 ≤ nums.length ≤ 1000’
 *   • ‘-1000 ≤ nums[i] ≤ 1000’
 *   • ‘-10⁴ ≤ target ≤ 10⁴’
 *
 */

TEST(q16, sample_input01) {
  l16::Solution solver;
  vector<int> nums = {-1, 2, 1, -4};
  int target = 1;
  int exp = 2;
  EXPECT_EQ(solver.threeSumClosest(nums, target), exp);
}

TEST(q16, sample_input02) {
  l16::Solution solver;
  vector<int> nums = {0, 0, 0};
  int target = 1;
  int exp = 0;
  EXPECT_EQ(solver.threeSumClosest(nums, target), exp);
}

#endif