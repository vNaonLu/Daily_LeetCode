
#ifndef Q49_UNITTEST_H__
#define Q49_UNITTEST_H__
#include <gtest/gtest.h>

#include <algorithm>

#include "q0049.hpp"
using namespace std;

/**
  * This file is generated by leetcode_add.py
  *
  * 49. Group Anagrams
  * Given an array of strings strs , group “the
  * anagrams” together. You can return the answer in “any
  * order” .
  * An “Anagram” is a word or phrase formed by
  * rearranging the letters of a different word or phrase,
  * typically using all the original letters exactly
  * once.
  *
  * Constraints:
  * -  1 <= strs.length <= 10^(4) 
  * -  0 <= strs[i].length <= 100 
  * -  strs[i] consists of lowercase English letters.
  *
*/

TEST(q49, sample_input01) {
  l49::Solution solver;
  vector<string> strs = {"eat", "tea", "tan", "ate", "nat", "bat"};
  vector<vector<string>> exp = {{"bat"}, {"eat", "tea", "ate"}, {"tan", "nat"}};
  EXPECT_EQ(solver.groupAnagrams(strs), exp);
}

TEST(q49, sample_input02) {
  l49::Solution solver;
  vector<string> strs = {""};
  vector<vector<string>> exp = {{""}};
  EXPECT_EQ(solver.groupAnagrams(strs), exp);
}

#endif