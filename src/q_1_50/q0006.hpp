
#ifndef LEETCODE_Q6_H__
#define LEETCODE_Q6_H__
#include <iostream>
#include <string>

namespace l6 {
using namespace std;

/**
  * This file is generated by leetcode_add.py
  *
  * 6.
  *    ZigZag Conversion
  *
  * ––––––––––––––––––––––––––––– Description –––––––––––––––––––––––––––––
  *
  *   The string ‘"PAYPALISHIRING"’ is written in a zigzag pattern on a
  *   given number of rows like this: (you may want to display this pattern
  *   in a fixed font for better.
  *   
  *   P   A   H.
  *   
  *   A P L S I I.
  *   
  *   Y   I.
  *   
  *   And then read line by line: ‘"PAHNAPLSIIGYIR"’.
  *   
  *   Write the code that will take a string and make this conversion given
  *   a number of.
  *   
  *   string convert(string s, int.
  *
  * ––––––––––––––––––––––––––––– Constraints –––––––––––––––––––––––––––––
  *
  *   • ‘1 ≤ s.length ≤ 1000’
  *   • ‘s’ consists of English letters (lower-case and upper-case), ‘','’ and ‘'.'’ .
  *   • ‘1 ≤ numRows ≤ 1000’
  *
*/

class Solution {
 public:
  string convert(string s, int numRows) {
    if (numRows == 1) return s;
    string res;
    int cycle = 2 * numRows - 2;
    for (int i = 0; i < numRows; ++i) {
      for (int j = 0; j + i < s.size(); j += cycle) {
        res.push_back(s[j + i]);
        if (i != 0 && i != numRows - 1 && j + cycle - i < s.size())
          res.push_back(s[j + cycle - i]);
      }
    }
    return res;
  }
};
}  // namespace l6

#endif