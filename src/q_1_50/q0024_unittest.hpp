
#ifndef Q24_UNITTEST_H__
#define Q24_UNITTEST_H__
#include <gtest/gtest.h>

#include "q0024.hpp"
using namespace std;

/**
  * This file is generated by leetcode_add.py
  *
  * 24.
  *     Swap Nodes in Pairs
  *
  * ––––––––––––––––––––––––––––– Description –––––––––––––––––––––––––––––
  *
  *   Given alinked list, swap every two adjacent nodes and return its head.
  *   You must solve the problem withoutmodifying the values in the
  *   list&#39;s nodes (i.e., only nodes themselves may be changed.
  *
  * ––––––––––––––––––––––––––––– Constraints –––––––––––––––––––––––––––––
  *
  *   • The number of nodes in thelistis in the range ‘[0, 100]’ .
  *   • ‘0 ≤ Node.val ≤ 100’
  *
*/

TEST(q24, sample_input01) {
  l24::Solution solver;
  ListNode* head = ListNode::generate({1, 2, 3, 4});
  ListNode* exp = ListNode::generate({2, 1, 4, 3});
  EXPECT_LISTNODE_EQ(solver.swapPairs(head), exp);
}

TEST(q24, sample_input02) {
  l24::Solution solver;
  ListNode* head = ListNode::generate({});
  ListNode* exp = ListNode::generate({});
  EXPECT_LISTNODE_EQ(solver.swapPairs(head), exp);
}

TEST(q24, sample_input03) {
  l24::Solution solver;
  ListNode* head = ListNode::generate({1});
  ListNode* exp = ListNode::generate({1});
  EXPECT_LISTNODE_EQ(solver.swapPairs(head), exp);
}

#endif