
#ifndef Q34_UNITTEST_H__
#define Q34_UNITTEST_H__
#include <gtest/gtest.h>

#include "q0034.hpp"
using namespace std;

/**
  * this file is generated by gquestion.py
  *
  * 34. Find First and Last Position of Element in Sorted Array
  *
  * Given an array of integers nums sorted in
  * ascending order, find the starting and ending position of
  * a given target value.
  * If target is not found in the array, return [-1,
  * -1] .
  * You mustwrite an algorithm with O(log n) runtime
  * complexity.
  *
  * Constraints:
  * -  0 <= nums.length <= 10^(5) 
  * -  -10^(9)<= nums[i]<= 10^(9) 
  * -  nums is a non-decreasing array.
  * -  -10^(9)<= target<= 10^(9) 
  *
*/

TEST(q34, sample_input01) {
  vector<int> nums = {5, 7, 7, 8, 8, 10};
  int target = 8;
  vector<int> exp = {3, 4};
  l34::Solution solver;
  EXPECT_EQ(solver.searchRange(nums, target), exp);
}

TEST(q34, sample_input02) {
  vector<int> nums = {5, 7, 7, 8, 8, 10};
  int target = 6;
  vector<int> exp = {-1, -1};
  l34::Solution solver;
  EXPECT_EQ(solver.searchRange(nums, target), exp);
}

TEST(q34, sample_input03) {
  vector<int> nums = {};
  int target = 0;
  vector<int> exp = {-1, -1};
  l34::Solution solver;
  EXPECT_EQ(solver.searchRange(nums, target), exp);
}

#endif