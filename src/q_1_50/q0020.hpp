
#ifndef LEETCODE_Q20_H__
#define LEETCODE_Q20_H__
#include <iostream>
#include <stack>
#include <string>

namespace l20 {
using namespace std;

/**
  * this file is generated by gquestion.py
  *
  * 20. Valid Parentheses
  *
  * Given a string s containing just the characters
  * ';('; , ';)'; , ';{'; , ';}'; , ';['; and ';]'; ,
  * determine if the input string is valid.
  * An input string is valid if:
  * - Open brackets must be closed by the same type
  * of brackets.
  * - Open brackets must be closed in the correct
  * order.
  *
  * Constraints:
  * -  1 <= s.length <= 10^(4) 
  * -  s consists of parentheses only ';()[]{}'; .
  *
*/
class Solution {
 public:
  bool isValid(string s) {
    stack<char> st;
    for (const auto &c : s) {
      if (c == ')') {
        if (st.empty() || st.top() != '(')
          return false;
        st.pop();
      } else if (c == ']') {
        if (st.empty() || st.top() != '[')
          return false;
        st.pop();
      } else if (c == '}') {
        if (st.empty() || st.top() != '{')
          return false;
        st.pop();
      } else
        st.push(c);
    }
    return st.empty();
  }
};
}  // namespace l20
#endif