#include <gtest/gtest.h>
#include <iostream>
#include <string>

using namespace std;

/**
 * This file is generated by leetcode_add.py v1.0
 *
 * 6.
 *    Zigzag Conversion
 *
 * ––––––––––––––––––––––––––––– Description –––––––––––––––––––––––––––––
 *
 *   The string ‘'PAYPALISHIRING'’ is written in a zigzag pattern on a
 *   given number of rows like this: (you may want to display this pattern
 *   in a fixed font for better
 *   P   A   H  
 *   A P L S I I
 *   Y   I  
 *   And then read line by line: ‘'PAHNAPLSIIGYIR'’
 *   Write the code that will take a string and make this conversion given
 *   a number of
 *   string convert(string s, int
 *
 * ––––––––––––––––––––––––––––– Constraints –––––––––––––––––––––––––––––
 *
 *   • ‘1 ≤ s.length ≤ 1000’
 *   • ‘s’ consists of English letters (lower-case and upper-case), ‘','’ and ‘'.'’ .
 *   • ‘1 ≤ numRows ≤ 1000’
 *
 */

struct q6 : public ::testing::Test {
  // Leetcode answer here
  class Solution {
   public:
    string convert(string s, int numRows) {
      if (numRows == 1) return s;
      string res;
      int cycle = 2 * numRows - 2;
      for (int i = 0; i < numRows; ++i) {
        for (int j = 0; j + i < s.size(); j += cycle) {
          res.push_back(s[j + i]);
          if (i != 0 && i != numRows - 1 && j + cycle - i < s.size())
            res.push_back(s[j + cycle - i]);
        }
      }
      return res;
    }
  };

  class Solution *solution;
};

TEST_F(q6, sample_input01) {
  solution = new Solution();
  string s = "PAYPALISHIRING";
  int numRows = 3;
  string exp = "PAHNAPLSIIGYIR";
  EXPECT_EQ(solution->convert(s, numRows), exp);
  delete solution;
}

TEST_F(q6, sample_input02) {
  solution = new Solution();
  string s = "PAYPALISHIRING";
  int numRows = 4;
  string exp = "PINALSIGYAHRPI";
  EXPECT_EQ(solution->convert(s, numRows), exp);
  delete solution;
}

TEST_F(q6, sample_input03) {
  solution = new Solution();
  string s = "A";
  int numRows = 1;
  string exp = "A";
  EXPECT_EQ(solution->convert(s, numRows), exp);
  delete solution;
}