
#ifndef Q21_UNITTEST_H__
#define Q21_UNITTEST_H__
#include <gtest/gtest.h>

#include "q0021.hpp"
using namespace std;

/**
  * this file is generated by gquestion.py
  *
  * 21. Merge Two Sorted Lists
  *
  * Merge two sorted linked lists and return it as a
  * “sorted“ list. The list should be made by splicing
  * together the nodes of the first two lists.
  *
  * Constraints:
  * - The number of nodes in both lists is in the range [0, 50] .
  * -  -100 <= Node.val <= 100 
  * - Both l1 and l2 are sorted in “non-decreasing“ order.
  *
*/

TEST(q21, sample_input01) {
  ListNode *l1 = ListNode::generate({1, 2, 4});
  ListNode *l2 = ListNode::generate({1, 3, 4});
  ListNode *exp = ListNode::generate({1, 1, 2, 3, 4, 4});
  l21::Solution solver;
  EXPECT_LISTNODE_EQ(solver.mergeTwoLists(l1, l2), exp);
}

TEST(q21, sample_input02) {
  ListNode *l1 = ListNode::generate({});
  ListNode *l2 = ListNode::generate({});
  ListNode *exp = ListNode::generate({});
  l21::Solution solver;
  EXPECT_LISTNODE_EQ(solver.mergeTwoLists(l1, l2), exp);
}

TEST(q21, sample_input03) {
  ListNode *l1 = ListNode::generate({});
  ListNode *l2 = ListNode::generate({0});
  ListNode *exp = ListNode::generate({0});
  l21::Solution solver;
  EXPECT_LISTNODE_EQ(solver.mergeTwoLists(l1, l2), exp);
}

#endif