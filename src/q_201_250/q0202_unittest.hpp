
#ifndef Q202_UNITTEST_H__
#define Q202_UNITTEST_H__
#include <gtest/gtest.h>

#include "q0202.hpp"
using namespace std;

/**
  * This file is generated by leetcode_add.py
  *
  * 202.
  *      Happy Number
  *
  * ––––––––––––––––––––––––––––– Description –––––––––––––––––––––––––––––
  *
  *   Write an algorithm to determine if a number ‘n’ is happy.
  *   
  *   A “happy number” is a number defined by the following.
  *   
  *   - Starting with any positive integer, replace the number by the sum
  *   of the squares of its digits.
  *   
  *   - Repeat the process until the number equals 1 (where it will stay),
  *   or it “loops endlessly in a cycle” which does not include 1.
  *   
  *   - Those numbers for which this process “ends in 1” are happy.
  *   
  *   Return ‘true’ “if” ‘n’ “is a happy number, and” ‘false’ “if not”.
  *
  * ––––––––––––––––––––––––––––– Constraints –––––––––––––––––––––––––––––
  *
  *   • ‘1 ≤ n ≤ 2³¹ - 1’
  *
*/

TEST(q202, sample_input01) {
  l202::Solution solver;
  int n = 19;
  bool exp = true;
  EXPECT_EQ(solver.isHappy(n), exp);
}

TEST(q202, sample_input02) {
  l202::Solution solver;
  int n = 2;
  bool exp = false;
  EXPECT_EQ(solver.isHappy(n), exp);
}

#endif