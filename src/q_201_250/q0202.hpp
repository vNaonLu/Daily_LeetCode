
#ifndef LEETCODE_Q202_H__
#define LEETCODE_Q202_H__
#include <iostream>
#include <unordered_set>

namespace l202 {
using namespace std;

/**
  * This file is generated by leetcode_add.py
  *
  * 202.
  *      Happy Number
  *
  * ––––––––––––––––––––––––––––– Description –––––––––––––––––––––––––––––
  *
  *   Write an algorithm to determine if a number ‘n’ is happy.
  *   
  *   A “happy number” is a number defined by the following.
  *   
  *   - Starting with any positive integer, replace the number by the sum
  *   of the squares of its digits.
  *   
  *   - Repeat the process until the number equals 1 (where it will stay),
  *   or it “loops endlessly in a cycle” which does not include 1.
  *   
  *   - Those numbers for which this process “ends in 1” are happy.
  *   
  *   Return ‘true’ “if” ‘n’ “is a happy number, and” ‘false’ “if not”.
  *
  * ––––––––––––––––––––––––––––– Constraints –––––––––––––––––––––––––––––
  *
  *   • ‘1 ≤ n ≤ 2³¹ - 1’
  *
*/

class Solution {
 public:
  bool isHappy(int n) {
    unordered_set<int> appeared;
    while (n != 1) {
      if (appeared.count(n)) return false;
      appeared.insert(n);
      int next = 0;
      while (n != 0) {
        int digit = n % 10;
        next += digit * digit;
        n /= 10;
      }
      n = next;
    }
    return true;
  }
};
}  // namespace l202

#endif