
#ifndef Q451_UNITTEST_H__
#define Q451_UNITTEST_H__
#include <gtest/gtest.h>

#include "q0451.hpp"
using namespace std;

/**
  * This file is generated by leetcode_add.py
  *
  * 451.
  *      Sort Characters By Frequency
  *
  * ––––––––––––––––––––––––––––– Description –––––––––––––––––––––––––––––
  *
  *   Given a string ‘s’ , sort it in “decreasing order” based on the
  *   “frequency” of the characters. The “frequency” of a character is the
  *   number of times it appears in the string.
  *   
  *   Return “the sorted string” . If there are multiple answers, return
  *   “any of them”.
  *
  * ––––––––––––––––––––––––––––– Constraints –––––––––––––––––––––––––––––
  *
  *   • ‘1 ≤ s.length ≤ 5 × 10⁵’
  *   • ‘s’ consists of uppercase and lowercase English letters and digits.
  *
*/

TEST(q451, sample_input01) {
  l451::Solution solver;
  string s = "tree";
  string exp = "eert";
  EXPECT_EQ(solver.frequencySort(s), exp);
}

TEST(q451, sample_input02) {
  l451::Solution solver;
  string s = "cccaaa";
  string exp = "aaaccc";
  EXPECT_EQ(solver.frequencySort(s), exp);
}

TEST(q451, sample_input03) {
  l451::Solution solver;
  string s = "Aabb";
  string exp = "bbAa";
  EXPECT_EQ(solver.frequencySort(s), exp);
}

#endif