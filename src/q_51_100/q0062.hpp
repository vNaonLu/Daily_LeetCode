
#ifndef LEETCODE_Q62_H__
#define LEETCODE_Q62_H__
#include <iostream>
#include <vector>

namespace l62 {
using namespace std;

/**
  * This file is generated by leetcode_add.py
  *
  * 62.
  *     Unique Paths
  *
  * ––––––––––––––––––––––––––––– Description –––––––––––––––––––––––––––––
  *
  *   A robot is located at the top-left corner of a ‘m x n’ grid (marked
  *   'Start' in the diagram below).
  *   
  *   The robot can only move either down or right at any point in time. The
  *   robot is trying to reach the bottom-right corner of the grid (marked
  *   'Finish' in the diagram below).
  *   
  *   How many possible unique paths are.
  *
  * ––––––––––––––––––––––––––––– Constraints –––––––––––––––––––––––––––––
  *
  *   • ‘1 ≤ m, n ≤ 100’
  *   • It&#39;s guaranteed that the answer will be less than or equal to ‘2 × 10⁹’ .
  *
*/

class Solution {
 public:
  int uniquePaths(int m, int n) {
    vector<vector<int>> dp(m, vector<int>(n, 0));
    for (int i = 0; i < m; ++i)
      dp[i][0] = 1;
    for (int i = 0; i < n; ++i)
      dp[0][i] = 1;
    for (int i = 1; i < m; ++i)
      for (int j = 1; j < n; ++j)
        dp[i][j] = dp[i - 1][j] + dp[i][j - 1];
    return dp.back().back();
  }
};
}  // namespace l62

#endif