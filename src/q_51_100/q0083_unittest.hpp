
#ifndef Q83_UNITTEST_H__
#define Q83_UNITTEST_H__
#include <gtest/gtest.h>

#include "q0083.hpp"
using namespace std;

/**
  * this file is generated by gquestion.py
  *
  * 83. Remove Duplicates from Sorted List
  *
  * Given the head of a sorted linked list, delete
  * all duplicates such that each element appears only
  * once . Return the linked list “sorted“ as well .
  *
  * Constraints:
  * - The number of nodes in the list is in the range [0, 300] .
  * -  -100 <= Node.val <= 100 
  * - The list is guaranteed to be “sorted“ in ascending order.
  *
*/

TEST(q83, sample_input01) {
  ListNode *head = ListNode::generate({1, 1, 2});
  ListNode *exp = ListNode::generate({1, 2});
  l83::Solution solver;
  EXPECT_LISTNODE_EQ(solver.deleteDuplicates(head), exp);
}

TEST(q83, sample_input02) {
  ListNode *head = ListNode::generate({1, 1, 2, 3, 3});
  ListNode *exp = ListNode::generate({1, 2, 3});
  l83::Solution solver;
  EXPECT_LISTNODE_EQ(solver.deleteDuplicates(head), exp);
}

#endif