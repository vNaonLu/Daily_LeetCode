
#ifndef LEETCODE_Q77_H__
#define LEETCODE_Q77_H__
#include <iostream>
#include <vector>

namespace l77 {
using namespace std;

/**
  * this file is generated by gquestion.py
  *
  * 77. Combinations
  *
  * Given two integers n and k , return all possible
  * combinations of k numbers out of the range [1, n]
  * .
  * You may return the answer in “any order“ .
  *
  * Constraints:
  * -  1 <= n <= 20 
  * -  1 <= k <= n 
  *
*/
class Solution {
 private:
  void helper(const int &n, const int &k, vector<vector<int>> &r, vector<int> &cur, int c = 1) {
    if (cur.size() == k) {
      r.push_back(cur);
      return;
    }
    if (c > n) return;
    cur.reserve(k);
    for (int i = c; i <= n; ++i) {
      cur.push_back(i);
      helper(n, k, r, cur, i + 1);
      cur.pop_back();
    }
  }

 public:
  vector<vector<int>> combine(int n, int k) {
    vector<vector<int>> res;
    vector<int> tmp;
    helper(n, k, res, tmp);
    return res;
  }
};
}  // namespace l77
#endif