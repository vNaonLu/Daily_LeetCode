
#ifndef Q53_UNITTEST_H__
#define Q53_UNITTEST_H__
#include <gtest/gtest.h>

#include "q0053.hpp"
using namespace std;

/**
  * This file is generated by leetcode_add.py
  *
  * 53.
  *     Maximum Subarray
  *
  * ––––––––––––––––––––––––––––– Description –––––––––––––––––––––––––––––
  *
  *   Given an integer array ‘nums’ , find the contiguous subarray
  *   (containing at least one number) which has the largest sum and return
  *   “its sum”
  *   A “subarray” is a “contiguous” part of an array.
  *
  * ––––––––––––––––––––––––––––– Constraints –––––––––––––––––––––––––––––
  *
  *   • ‘1 ≤ nums.length ≤ 10⁵’
  *   • ‘-10⁴ ≤ nums[i] ≤ 10⁴’
  *
*/

TEST(q53, sample_input01) {
  l53::Solution solver;
  vector<int> nums = {-2, 1, -3, 4, -1, 2, 1, -5, 4};
  int exp = 6;
  EXPECT_EQ(solver.maxSubArray(nums), exp);
}

TEST(q53, sample_input02) {
  l53::Solution solver;
  vector<int> nums = {1};
  int exp = 1;
  EXPECT_EQ(solver.maxSubArray(nums), exp);
}

TEST(q53, sample_input03) {
  l53::Solution solver;
  vector<int> nums = {5, 4, -1, 7, 8};
  int exp = 23;
  EXPECT_EQ(solver.maxSubArray(nums), exp);
}

#endif