
#ifndef Q72_UNITTEST_H__
#define Q72_UNITTEST_H__
#include <gtest/gtest.h>

#include "q0072.hpp"
using namespace std;

/**
  * This file is generated by leetcode_add.py
  *
  * 72.
  *     Edit Distance
  *
  * ––––––––––––––––––––––––––––– Description –––––––––––––––––––––––––––––
  *
  *   Given two strings ‘word1’ and ‘word2’ , return “the minimum number of
  *   operations required to convert ‘word1’ to ‘word2’ ”.
  *   
  *   You have the following three operations permitted on a.
  *   
  *   - Insert a.
  *   
  *   - Delete a.
  *   
  *   - Replace a.
  *
  * ––––––––––––––––––––––––––––– Constraints –––––––––––––––––––––––––––––
  *
  *   • ‘0 ≤ word1.length, word2.length ≤ 500’
  *   • ‘word1’ and ‘word2’ consist of lowercase English letters.
  *
*/

TEST(q72, sample_input01) {
  l72::Solution solver;
  string word1 = "horse";
  string word2 = "ros";
  int exp = 3;
  EXPECT_EQ(solver.minDistance(word1, word2), exp);
}

TEST(q72, sample_input02) {
  l72::Solution solver;
  string word1 = "intention";
  string word2 = "execution";
  int exp = 5;
  EXPECT_EQ(solver.minDistance(word1, word2), exp);
}

#endif