
#ifndef Q90_UNITTEST_H__
#define Q90_UNITTEST_H__
#include <gtest/gtest.h>

#include "q0090.hpp"
using namespace std;

/**
  * This file is generated by leetcode_add.py
  *
  * #90
  *     Subsets II
  *
  *============================= Description =============================
  *
  *   Given an integer array ‘nums‘ that may contain duplicates, return all
  *   possible subsets (the power set).
  *   
  *   The solution set “must not” contain duplicate subsets. Return the
  *   solution in “any order”.
  *
  * ============================= Constraints =============================
  *
  *   • ‘1 <= nums.length <= 10‘
  *   • ‘-10 <= nums[i] <= 10‘
  *
*/

TEST(q90, sample_input01) {
  l90::Solution solver;
  vector<int> nums = {1, 2, 2};
  vector<vector<int>> exp = {{}, {1}, {2}, {1, 2}, {2, 2}, {1, 2, 2}};
  EXPECT_EQ(solver.subsetsWithDup(nums), exp);
}

TEST(q90, sample_input02) {
  l90::Solution solver;
  vector<int> nums = {0};
  vector<vector<int>> exp = {{}, {0}};
  EXPECT_EQ(solver.subsetsWithDup(nums), exp);
}

#endif