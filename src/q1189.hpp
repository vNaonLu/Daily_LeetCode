
#ifndef LEETCODE_Q1189_H__
#define LEETCODE_Q1189_H__
#include <algorithm>
#include <iostream>
#include <string>
#include <unordered_map>

namespace l1189 {
using namespace std;

/**
  * this file is generated by gquestion.py
  *
  * 1189. Maximum Number of Balloons
  *
  * Given a string text , you want to use the
  * characters of text to form as many instances of the word
  * “"balloon"“ as possible.
  * You can use each character in text “at most once“
  * . Return the maximum number of instances that can
  * be formed.
  *
  * Constraints:
  * -  1 <= text.length <= 10^(4) 
  * -  text consists of lower case English letters only.
  *
*/
class Solution {
 public:
  int maxNumberOfBalloons(string text) {
    unordered_map<char, int> tar{{'b', 1}, {'a', 1}, {'l', 2}, {'o', 2}, {'n', 1}};
    unordered_map<char, int> cnt{{'b', 0}, {'a', 0}, {'l', 0}, {'o', 0}, {'n', 0}};
    for (const auto &c : text) {
      if (tar.count(c)) {
        ++cnt[c];
      }
    }
    int res = text.size();
    for (const auto [a, b] : cnt) {
      res = min(b / tar[a], res);
    }
    return res;
  }
};
}  // namespace l1189
#endif