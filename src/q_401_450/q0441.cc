#include <gtest/gtest.h>
#include <cmath>
#include <iostream>

using namespace std;

/**
 * This file is generated by leetcode_add.py v1.0
 *
 * 441.
 *      Arranging Coins
 *
 * ––––––––––––––––––––––––––––– Description –––––––––––––––––––––––––––––
 *
 *   You have ‘n’ coins and you want to build a staircase with these coins.
 *   The staircase consists of ‘k’ rows where the ‘iᵗʰ’ row has exactly ‘i’
 *   coins. The last row of the staircase “may be”
 *   Given the integer ‘n’ , return “the number of “complete rows” of the
 *   staircase you will build” .
 *
 * ––––––––––––––––––––––––––––– Constraints –––––––––––––––––––––––––––––
 *
 *   • ‘1 ≤ n ≤ 2³¹ - 1’
 *
 */

struct q441 : public ::testing::Test {
  // Leetcode answer here
  class Solution {
   public:
    int arrangeCoins(int n) {
      return (int)(sqrt(2 * (long long)n + 0.25) - 0.5);
    }
  };

  class Solution *solution;
};

TEST_F(q441, sample_input01) {
  solution = new Solution();
  int n = 5;
  int exp = 2;
  EXPECT_EQ(solution->arrangeCoins(n), exp);
  delete solution;
}

TEST_F(q441, sample_input02) {
  solution = new Solution();
  int n = 8;
  int exp = 3;
  EXPECT_EQ(solution->arrangeCoins(n), exp);
  delete solution;
}