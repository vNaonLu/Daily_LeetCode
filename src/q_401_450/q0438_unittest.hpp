
#ifndef Q438_UNITTEST_H__
#define Q438_UNITTEST_H__
#include <gtest/gtest.h>

#include "q0438.hpp"
using namespace std;

/**
  * this file is generated by gquestion.py
  *
  * 438. Find All Anagrams in a String
  * Given two strings s and p , return an array of
  * all the start indices of p ';s anagrams in s . You
  * may return the answer in “any order“ .
  * An “Anagram“ is a word or phrase formed by
  * rearranging the letters of a different word or phrase,
  * typically using all the original letters exactly
  * once.
  *
  * Constraints:
  * -  1 <= s.length, p.length <= 3 * 10^(4) 
  * -  s and p consist of lowercase English letters.
  *
*/

TEST(q438, sample_input01) {
  string s = "cbaebabacd",
         p = "abc";
  vector<int> exp = {0, 6};
  l438::Solution solver;
  EXPECT_EQ(solver.findAnagrams(s, p), exp);
}

TEST(q438, sample_input02) {
  string s = "abab",
         p = "ab";
  vector<int> exp = {0, 1, 2};
  l438::Solution solver;
  EXPECT_EQ(solver.findAnagrams(s, p), exp);
}

TEST(q438, input01) {
  string s = "aaaaaaaaaa",
         p = "aaaaaaaaaaaaa";
  vector<int> exp = {};
  l438::Solution solver;
  EXPECT_EQ(solver.findAnagrams(s, p), exp);
}

#endif