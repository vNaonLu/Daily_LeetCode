
#ifndef LEETCODE_Q413_H__
#define LEETCODE_Q413_H__
#include <iostream>
#include <vector>

namespace l413 {
using namespace std;

/**
  * This file is generated by leetcode_add.py
  *
  * 413.
  *      Arithmetic Slices
  *
  * ––––––––––––––––––––––––––––– Description –––––––––––––––––––––––––––––
  *
  *   An integer array is called arithmetic if it consists of “at least
  *   three elements” and if the difference between any two consecutive
  *   elements is the same.
  *   
  *   - For example, ‘[1,3,5,7,9]’ , ‘[7,7,7,7]’ , and ‘[3,-1,-5,-9]’ are
  *   arithmetic sequences.
  *   
  *   Given an integer array ‘nums’ , return “the number of arithmetic
  *   “subarrays” of” ‘nums’.
  *   
  *   A “subarray” is a contiguous subsequence of the array.
  *
  * ––––––––––––––––––––––––––––– Constraints –––––––––––––––––––––––––––––
  *
  *   • ‘1 ≤ nums.length ≤ 5000’
  *   • ‘-1000 ≤ nums[i] ≤ 1000’
  *
*/

class Solution {
 public:
  int numberOfArithmeticSlices(vector<int>& nums) {
    if (nums.size() < 3) return 0;
    int res = 0,
        cnt = 1;

    for (int i = 0; i < nums.size() - 2; ++i) {
      if (nums[i + 2] - nums[i + 1] == nums[i + 1] - nums[i]) {
        ++cnt;
      } else {
        res += cnt * (cnt - 1) / 2;
        cnt = 1;
      }
    }
    res += cnt * (cnt - 1) / 2;
    return res;
  }
};
}  // namespace l413

#endif