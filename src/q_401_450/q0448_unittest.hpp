
#ifndef Q448_UNITTEST_H__
#define Q448_UNITTEST_H__
#include <gtest/gtest.h>

#include "q0448.hpp"
using namespace std;

/**
 * This file is generated by leetcode_add.py
 *
 * 448.
 *      Find All Numbers Disappeared in an Array
 *
 * ––––––––––––––––––––––––––––– Description –––––––––––––––––––––––––––––
 *
 *   Given an array ‘nums’ of ‘n’ integers where ‘nums[i]’ is in the range
 *   ‘[1, n]’ , return “an array of all the integers in the range” ‘[1, n]’
 *   “that do not appear in” ‘nums’ .
 *
 * ––––––––––––––––––––––––––––– Constraints –––––––––––––––––––––––––––––
 *
 *   • ‘n = nums.length’
 *   • ‘1 ≤ n ≤ 10⁵’
 *   • ‘1 ≤ nums[i] ≤ n’
 *
 */

TEST(q448, sample_input01) {
  l448::Solution solver;
  vector<int> nums = {4, 3, 2, 7, 8, 2, 3, 1};
  vector<int> exp = {5, 6};
  EXPECT_EQ(solver.findDisappearedNumbers(nums), exp);
}

TEST(q448, sample_input02) {
  l448::Solution solver;
  vector<int> nums = {1, 1};
  vector<int> exp = {2};
  EXPECT_EQ(solver.findDisappearedNumbers(nums), exp);
}

#endif