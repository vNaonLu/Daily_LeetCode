
#ifndef Q404_UNITTEST_H__
#define Q404_UNITTEST_H__
#include <gtest/gtest.h>

#include "q0404.hpp"
using namespace std;

/**
 * This file is generated by leetcode_add.py
 *
 * 404.
 *      Sum of Left Leaves
 *
 * ––––––––––––––––––––––––––––– Description –––––––––––––––––––––––––––––
 *
 *   Given the ‘root’ of a binary tree, return the sum of all left leaves.
 *
 * ––––––––––––––––––––––––––––– Constraints –––––––––––––––––––––––––––––
 *
 *   • The number of nodes in the tree is in the range ‘[1, 1000]’ .
 *   • ‘-1000 ≤ Node.val ≤ 1000’
 *
 */

TEST(q404, sample_input01) {
  l404::Solution solver;
  TreeNode* root = TreeNode::generate({3, 9, 20, NULL_TREENODE, NULL_TREENODE, 15, 7});
  int exp = 24;
  EXPECT_EQ(solver.sumOfLeftLeaves(root), exp);
}

TEST(q404, sample_input02) {
  l404::Solution solver;
  TreeNode* root = TreeNode::generate({1});
  int exp = 0;
  EXPECT_EQ(solver.sumOfLeftLeaves(root), exp);
}

#endif