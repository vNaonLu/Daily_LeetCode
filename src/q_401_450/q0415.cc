#include <gtest/gtest.h>
#include <iostream>
#include <string>

using namespace std;

/**
 * This file is generated by leetcode_add.py v1.0
 *
 * 415.
 *      Add Strings
 *
 * ––––––––––––––––––––––––––––– Description –––––––––––––––––––––––––––––
 *
 *   Given two non-negative integers, ‘num1’ and ‘num2’ represented as
 *   string, return “the sum of” ‘num1’ “and” ‘num2’ “as a string”
 *   You must solve the problem without using any built-in library for
 *   handling large integers (such as ‘BigInteger’ ). You must also not
 *   convert the inputs to integers directly.
 *
 * ––––––––––––––––––––––––––––– Constraints –––––––––––––––––––––––––––––
 *
 *   • ‘1 ≤ num1.length, num2.length ≤ 10⁴’
 *   • ‘num1’ and ‘num2’ consist of only digits.
 *   • ‘num1’ and ‘num2’ don't have any leading zeros except for the zero itself.
 *
 */

struct q415 : public ::testing::Test {
  // Leetcode answer here
  class Solution {
   public:
    string addStrings(string num1, string num2) {
      string res;
      res.reserve(max(num1.size(), num2.size()) + 1);
      int i = num1.size() - 1, j = num2.size() - 1;
      int carry = 0;
      while (i >= 0 || j >= 0 || carry) {
        int cur = (i >= 0 ? num1[i] - '0' : 0) +
                  (j >= 0 ? num2[j] - '0' : 0) + carry;
        carry = cur / 10;
        cur %= 10;
        res.push_back(cur + '0');
        i--, j--;
      }
      reverse(res.begin(), res.end());
      return res;
    }
  };

  class Solution *solution;
};

TEST_F(q415, sample_input01) {
  solution = new Solution();
  string num1 = "11";
  string num2 = "123";
  string exp = "134";
  EXPECT_EQ(solution->addStrings(num1, num2), exp);
  delete solution;
}

TEST_F(q415, sample_input02) {
  solution = new Solution();
  string num1 = "456";
  string num2 = "77";
  string exp = "533";
  EXPECT_EQ(solution->addStrings(num1, num2), exp);
  delete solution;
}

TEST_F(q415, sample_input03) {
  solution = new Solution();
  string num1 = "0";
  string num2 = "0";
  string exp = "0";
  EXPECT_EQ(solution->addStrings(num1, num2), exp);
  delete solution;
}