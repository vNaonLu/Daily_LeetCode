
#ifndef LEETCODE_Q442_H__
#define LEETCODE_Q442_H__
#include <iostream>
#include <vector>

namespace l442 {
using namespace std;

/**
  * This file is generated by leetcode_add.py
  *
  * 442.
  *      Find All Duplicates in an Array
  *
  * ––––––––––––––––––––––––––––– Description –––––––––––––––––––––––––––––
  *
  *   Given an integer array ‘nums’ of length ‘n’ where all the integers of
  *   ‘nums’ are in the range ‘[1, n]’ and each integer appears “once” or
  *   “twice” , return “an array of all the integers that appears “twice” ”.
  *   
  *   You must write an algorithm that runs in ‘O(n)’ time and uses only
  *   constant extra space.
  *
  * ––––––––––––––––––––––––––––– Constraints –––––––––––––––––––––––––––––
  *
  *   • ‘n = nums.length’
  *   • ‘1 ≤ n ≤ 10⁵’
  *   • ‘1 ≤ nums[i] ≤ n’
  *   • Each element in ‘nums’ appears “once” or “twice” .
  *
*/

class Solution {
 public:
  vector<int> findDuplicates(vector<int>& nums) {
    vector<int> res;
    for(const auto &x : nums){
      int i = abs(x) - 1;
      if (nums[i] < 0) res.push_back(i + 1);
      nums[i] *= -1;
    }
    return res;
  }
};
}  // namespace l442

#endif