#include <array>
#include <gtest/gtest.h>
#include <iostream>
#include <string>

using namespace std;

/**
 * This file is generated by leetcode_add.py
 *
 * 1154.
 *       Day of the Year
 *
 * ––––––––––––––––––––––––––––– Description –––––––––––––––––––––––––––––
 *
 *   Given a string ‘date’ representing a <a
 *   href="https://en.wikipedia.org/wiki/Gregorian_calendar"
 *   target="_blank">Gregorian calendar</a> date formatted as ‘YYYY-MM-DD’
 *   , return “the day number of the year” .
 *
 * ––––––––––––––––––––––––––––– Constraints –––––––––––––––––––––––––––––
 *
 *   • ‘date.length = 10’
 *   • ‘date[4] = date[7] = '-'’ , and all other ‘date[i]’ 's are digits
 *   • ‘date’ represents a calendar date between Jan 1ˢᵗ, 1900 and Dec 31ᵗʰ,
 * 2019.
 *
 */

struct q1154 : public ::testing::Test {
  // Leetcode answer here
  class Solution {
  private:
    inline constexpr static array<int, 12> days = {31, 28, 31, 30, 31, 30,
                                                   31, 31, 30, 31, 30, 31};

  public:
    int dayOfYear(string date) {
      auto y = stoi(date.substr(0, 4));
      auto m = stoi(date.substr(5, 2));
      auto d = stoi(date.substr(8, 2));
      if (m > 2 && y % 4 == 0 && (y % 100 != 0 || y % 400 == 0)) {
        ++d;
      }
      while (--m > 0) {
        d += days[m - 1];
      }
      return d;
    }
  };

  class Solution *solution;
};

TEST_F(q1154, sample_input01) {
  solution    = new Solution();
  string date = "2019-01-09";
  int    exp  = 9;
  int    act  = solution->dayOfYear(date);
  EXPECT_EQ(act, exp);
  delete solution;
}

TEST_F(q1154, sample_input02) {
  solution    = new Solution();
  string date = "2019-02-10";
  int    exp  = 41;
  int    act  = solution->dayOfYear(date);
  EXPECT_EQ(act, exp);
  delete solution;
}