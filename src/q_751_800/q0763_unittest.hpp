
#ifndef Q763_UNITTEST_H__
#define Q763_UNITTEST_H__
#include <gtest/gtest.h>

#include "q0763.hpp"

using namespace std;

/**
  * this file is generated by gquestion.py

  *
  * 763. Partition Labels
  *
  * You are given a string s . We want to partition
  * the string into as many parts as possible so that
  * each letter appears in at most one part.
  * Return a list of integers representing the size
  * of these parts .
  *
  * Constraints:
  * -  1 <= s.length <= 500 
  * -  s consists of lowercase English letters.
  *
*/

TEST(q763, sample_input01) {
  int n = 5;
  vector<vector<int>> mines{{4, 2}};
  int exp = 2;
  l763::Solution solver;
  EXPECT_EQ(solver.orderOfLargestPlusSign(n, mines), exp);
}

TEST(q763, sample_input02) {
  int n =1;
  vector<vector<int>> mines{{0, 0}};
  int exp = 0;
  l763::Solution solver;
  EXPECT_EQ(solver.orderOfLargestPlusSign(n, mines), exp);
}

#endif