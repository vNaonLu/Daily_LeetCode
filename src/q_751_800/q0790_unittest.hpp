
#ifndef Q790_UNITTEST_H__
#define Q790_UNITTEST_H__
#include <gtest/gtest.h>

#include "q0790.hpp"
using namespace std;

/**
 * This file is generated by leetcode_add.py
 *
 * 790.
 *      Domino and Tromino Tiling
 *
 * ––––––––––––––––––––––––––––– Description –––––––––––––––––––––––––––––
 *
 *   You have two types of tiles: a ‘2 x 1’ domino shape and a tromino
 *   shape. You may rotate these
 *   Given an integer n, return “the number of ways to tile an” ‘2 x n’
 *   “board” . Since the answer may be very large, return it “modulo” ‘10⁹
 *   + 7’
 *   In a tiling, every square must be covered by a tile. Two tilings are
 *   different if and only if there are two 4-directionally adjacent cells
 *   on the board such that exactly one of the tilings has both squares
 *   occupied by a tile.
 *
 * ––––––––––––––––––––––––––––– Constraints –––––––––––––––––––––––––––––
 *
 *   • ‘1 ≤ n ≤ 1000’
 *
 */

TEST(q790, sample_input01) {
  l790::Solution solver;
  int n = 3;
  int exp = 5;
  EXPECT_EQ(solver.numTilings(n), exp);
}

TEST(q790, sample_input02) {
  l790::Solution solver;
  int n = 1;
  int exp = 1;
  EXPECT_EQ(solver.numTilings(n), exp);
}

#endif