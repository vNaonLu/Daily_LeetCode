
#ifndef LEETCODE_Q784_H__
#define LEETCODE_Q784_H__
#include <cctype>
#include <iostream>
#include <string>
#include <vector>

namespace l784 {
using namespace std;

/**
  * this file is generated by gquestion.py
  *
  * 784. Letter Case Permutation
  *
  * Given a string s , we can transform every letter
  * individually to be lowercase or uppercase to
  * create another string.
  * Return a list of all possible strings we could
  * create . You can return the outputin “any order“ .
  *
  * Constraints:
  * -  s will be a string with length between 1 and 12 .
  * -  s will consist only of letters or digits.
  *
*/
class Solution {
 private:
  bool isLetter(const char &c) {
    return (c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z');
  }
  string helper(string s, vector<int> &l, int c) {
    for (int i = 0; i < l.size(); ++i) {
      auto bit = 1 << i;
      s[l[i]] = bit & c ? toupper(s[l[i]]) : tolower(s[l[i]]);
    }
    return s;
  }

 public:
  vector<string> letterCasePermutation(string s) {
    vector<string> res;
    vector<int> letters;
    for (int i = 0; i < s.size(); ++i)
      if (isLetter(s[i]))
        letters.push_back(i);
    for (int i = 0; i < (1 << letters.size()); ++i) {
      res.emplace_back(helper(s, letters, i));
    }
    return res;
  }
};
}  // namespace l784
#endif