
#ifndef Q762_UNITTEST_H__
#define Q762_UNITTEST_H__
#include <gtest/gtest.h>

#include "q0762.hpp"
using namespace std;

/**
  * This file is generated by leetcode_add.py
  *
  * 762.
  *      Prime Number of Set Bits in Binary Representation
  *
  * ––––––––––––––––––––––––––––– Description –––––––––––––––––––––––––––––
  *
  *   Given two integers ‘left’ and ‘right’ , return “the “count” of numbers
  *   in the “inclusive” range ” ‘[left, right]’ “ having a “prime number of
  *   set bits” in their binary representation”.
  *   
  *   Recall that the “number of set bits” an integer has is the number of
  *   ‘1’ &#39;s present when written in binary.
  *   
  *   - For example, ‘21’ written in binary is ‘10101’ , which has ‘3’ set
  *   bits.
  *
  * ––––––––––––––––––––––––––––– Constraints –––––––––––––––––––––––––––––
  *
  *   • ‘1 ≤ left ≤ right ≤ 10⁶’
  *   • ‘0 ≤ right - left ≤ 10⁴’
  *
*/

TEST(q762, sample_input01) {
  l762::Solution solver;
  int left = 6;
  int right = 10;
  int exp = 4;
  EXPECT_EQ(solver.countPrimeSetBits(left, right), exp);
}

TEST(q762, sample_input02) {
  l762::Solution solver;
  int left = 10;
  int right = 15;
  int exp = 5;
  EXPECT_EQ(solver.countPrimeSetBits(left, right), exp);
}

#endif