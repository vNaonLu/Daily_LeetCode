
#ifndef Q304_UNITTEST_H__
#define Q304_UNITTEST_H__
#include <gtest/gtest.h>

#include "q0304.hpp"
using namespace std;

/**
 * This file is generated by leetcode_add.py
 *
 * 304.
 *      Range Sum Query 2D - Immutable
 *
 * ––––––––––––––––––––––––––––– Description –––––––––––––––––––––––––––––
 *
 *   Given a 2D matrix ‘matrix’ , handle multiple queries of the following
 *       - Calculate the “sum” of the elements of ‘matrix’ inside the
 *   rectangle defined by its “upper left corner” ‘(row1, col1)’ and “lower
 *   right corner” ‘(row2, col2)’
 *   Implement the NumMatrix
 *       -  ‘NumMatrix(int[][] matrix)’ Initializes the object with the
 *   integer matrix ‘matrix’
 *       -  ‘int sumRegion(int row1, int col1, int row2, int col2)’ Returns
 *   the “sum” of the elements of ‘matrix’ inside the rectangle defined by
 *   its “upper left corner” ‘(row1, col1)’ and “lower right corner”
 *   ‘(row2, col2)’ .
 *
 * ––––––––––––––––––––––––––––– Constraints –––––––––––––––––––––––––––––
 *
 *   • ‘m = matrix.length’
 *   • ‘n = matrix[i].length’
 *   • ‘1 ≤ m, n ≤ 200’
 *   • ‘-10⁵ ≤ matrix[i][j] ≤ 10⁵’
 *   • ‘0 ≤ row1 ≤ row2 < m’
 *   • ‘0 ≤ col1 ≤ col2 < n’
 *   • At most ‘10⁴’ calls will be made to ‘sumRegion’ .
 *
 */

TEST(q304, sample_input01) {
  vector<vector<int>> matrix = {{3, 0, 1, 4, 2},
                                {5, 6, 3, 2, 1},
                                {1, 2, 0, 1, 5},
                                {4, 1, 0, 1, 7},
                                {1, 0, 3, 0, 5}};
  l304::NumMatrix* num_matrix = new l304::NumMatrix(matrix);
  EXPECT_EQ(num_matrix->sumRegion(2, 1, 4, 3), 8);
  EXPECT_EQ(num_matrix->sumRegion(1, 1, 2, 2), 11);
  EXPECT_EQ(num_matrix->sumRegion(1, 2, 2, 4), 12);
  delete num_matrix;
}

#endif