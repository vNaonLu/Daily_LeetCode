#include <gtest/gtest.h>
#include <iostream>

using namespace std;

/**
 * This file is generated by leetcode_add.py
 *
 * 342.
 *      Power of Four
 *
 * ––––––––––––––––––––––––––––– Description –––––––––––––––––––––––––––––
 *
 *   Given an integer ‘n’ , return “ ‘true’ if it is a power of four.
 *   Otherwise, return ‘false’ ”
 *   An integer ‘n’ is a power of four, if there exists an integer ‘x’ such
 *   that ‘n = 4ˣ’ .
 *
 * ––––––––––––––––––––––––––––– Constraints –––––––––––––––––––––––––––––
 *
 *   • ‘-2³¹ ≤ n ≤ 2³¹ - 1’
 *
 */

struct q342 : public ::testing::Test {
  // Leetcode answer here
  class Solution {
   public:
    bool isPowerOfFour(int n) {
      while (n != 1) {
        if (n == 0 || n & 0b11) {
          return false;
        }

        n >>= 2;
      }

      return true;
    }
  };

  class Solution *solution;
};

TEST_F(q342, sample_input01) {
  solution = new Solution();
  int n = 16;
  bool exp = true;
  bool act = solution->isPowerOfFour(n);
  EXPECT_EQ(act, exp);
  delete solution;
}

TEST_F(q342, sample_input02) {
  solution = new Solution();
  int n = 5;
  bool exp = false;
  bool act = solution->isPowerOfFour(n);
  EXPECT_EQ(act, exp);
  delete solution;
}

TEST_F(q342, sample_input03) {
  solution = new Solution();
  int n = 1;
  bool exp = true;
  bool act = solution->isPowerOfFour(n);
  EXPECT_EQ(act, exp);
  delete solution;
}