
#ifndef LEETCODE_Q334_H__
#define LEETCODE_Q334_H__
#include <iostream>
#include <limits>
#include <vector>

namespace l334 {
using namespace std;

/**
  * this file is generated by gquestion.py
  *
  * 334. Increasing Triplet Subsequence
  * Given an integer array nums , return true if
  * there exists a triple of indices (i, j, k) such that i
  * < j < k and nums[i] < nums[j] < nums[k] . If no
  * such indices exists, return false .
  *
  * Constraints:
  * -  1 <= nums.length <= 5 * 10^(5) 
  * -  -2^(31) <= nums[i] <= 2^(31) - 1 
  *  “Follow up:“ Could you implement a solution that runs in O(n) time complexity and O(1) space complexity?
  *
*/
class Solution {
 public:
  bool increasingTriplet(vector<int>& nums) {
    int first = numeric_limits<int>::max(),
        second = numeric_limits<int>::max();

    for (int i = 0; i < nums.size(); ++i) {
      if (first >= nums[i]) {
        first = nums[i];
      } else if (second >= nums[i]) {
        second = nums[i];
      } else {
        return true;
      }
    }

    return false;
  }
};
}  // namespace l334
#endif