#include <gtest/gtest.h>
#include <iostream>
#include <string>
#include <vector>

using namespace std;

/**
 * This file is generated by leetcode_add.py v1.0
 *
 * 2011.
 *       Final Value of Variable After Performing Operations
 *
 * ––––––––––––––––––––––––––––– Description –––––––––––––––––––––––––––––
 *
 *   There is a programming language with only “four” operations and “one”
 *   variable ‘X’
 *       -  ‘++X’ and ‘X++’ “increments” the value of the variable ‘X’ by
 *   ‘1’
 *       -  ‘--X’ and ‘X--’ “decrements” the value of the variable ‘X’ by
 *   ‘1’
 *   Initially, the value of ‘X’ is ‘0’
 *   Given an array of strings ‘operations’ containing a list of
 *   operations, return “the “final ” value of ” ‘X’ “after performing all
 *   the operations” .
 *
 * ––––––––––––––––––––––––––––– Constraints –––––––––––––––––––––––––––––
 *
 *   • ‘1 ≤ operations.length ≤ 100’
 *   • ‘operations[i]’ will be either ‘'++X'’ , ‘'X++'’ , ‘'--X'’ , or ‘'X--'’ .
 *
 */

struct q2011 : public ::testing::Test {
  // Leetcode answer here
  class Solution {
   public:
    int finalValueAfterOperations(vector<string>& operations) {
      int res = 0;
      for (const string& s : operations) {
        switch (s[1]) {
          case '+':
            ++res;
            break;
          case '-':
            --res;
            break;
        }
      }
      return res;
    }
  };

  class Solution *solution;
};

TEST_F(q2011, sample_input01) {
  solution = new Solution();
  vector<string> operations = {"--X", "X++", "X++"};
  int exp = 1;
  EXPECT_EQ(solution->finalValueAfterOperations(operations), exp);
  delete solution;
}

TEST_F(q2011, sample_input02) {
  solution = new Solution();
  vector<string> operations = {"++X", "++X", "X++"};
  int exp = 3;
  EXPECT_EQ(solution->finalValueAfterOperations(operations), exp);
  delete solution;
}

TEST_F(q2011, sample_input03) {
  solution = new Solution();
  vector<string> operations = {"X++", "++X", "--X", "X--"};
  int exp = 0;
  EXPECT_EQ(solution->finalValueAfterOperations(operations), exp);
  delete solution;
}