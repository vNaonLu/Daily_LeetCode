
#ifndef Q884_UNITTEST_H__
#define Q884_UNITTEST_H__
#include <gtest/gtest.h>

#include <leetcode/anyorder.hpp>

#include "q0884.hpp"
using namespace std;

/**
 * This file is generated by leetcode_add.py
 *
 * 884.
 *      Uncommon Words from Two Sentences
 *
 * ––––––––––––––––––––––––––––– Description –––––––––––––––––––––––––––––
 *
 *   A “sentence” is a string of single-space separated words where each
 *   word consists only of lowercase
 *   A word is “uncommon” if it appears exactly once in one of the
 *   sentences, and “does not appear” in the other
 *   Given two “sentences” ‘s1’ and ‘s2’ , return “a list of all the
 *   “uncommon words” ” . You may return the answer in “any order” .
 *
 * ––––––––––––––––––––––––––––– Constraints –––––––––––––––––––––––––––––
 *
 *   • ‘1 ≤ s1.length, s2.length ≤ 200’
 *   • ‘s1’ and ‘s2’ consist of lowercase English letters and spaces.
 *   • ‘s1’ and ‘s2’ do not have leading or trailing spaces.
 *   • All the words in ‘s1’ and ‘s2’ are separated by a single space.
 *
 */

TEST(q884, sample_input01) {
  l884::Solution solver;
  string s1 = "this apple is sweet";
  string s2 = "this apple is sour";
  vector<string> exp = {"sweet", "sour"};
  // Try EXPECT_EQ_ANY_ORDER_RECURSIVE
  // if the element is also matched in any order.
  EXPECT_EQ_ANY_ORDER(solver.uncommonFromSentences(s1, s2), exp);
}

TEST(q884, sample_input02) {
  l884::Solution solver;
  string s1 = "apple apple";
  string s2 = "banana";
  vector<string> exp = {"banana"};
  // Try EXPECT_EQ_ANY_ORDER_RECURSIVE
  // if the element is also matched in any order.
  EXPECT_EQ_ANY_ORDER(solver.uncommonFromSentences(s1, s2), exp);
}

#endif