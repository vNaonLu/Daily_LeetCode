
#ifndef LEETCODE_Q876_H__
#define LEETCODE_Q876_H__
#include <iostream>
#include <leetcode/listnode.hpp>

namespace l876 {
using namespace std;

/**
  * this file is generated by gquestion.py

  *
  * 876. Middle of the Linked List
  *
  * Given the head of a singly linked list, return
  * the middle node of the linked list .
  * If there are two middle nodes, return “the second
  * middle“ node.
  *
  * Constraints:
  * - The number of nodes in the list is in the range [1, 100] .
  * -  1 <= Node.val <= 100 
  *
*/
class Solution {
 public:
  ListNode* middleNode(ListNode* head) {
    ListNode *fast = head, *slow = head;

    while (fast != nullptr && fast->next != nullptr) {
      slow = slow->next;
      fast = fast->next->next;
    }

    return slow;
  }
};
}  // namespace l876
#endif