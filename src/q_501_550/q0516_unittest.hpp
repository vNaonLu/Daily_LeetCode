
#ifndef Q516_UNITTEST_H__
#define Q516_UNITTEST_H__
#include <gtest/gtest.h>

#include "q0516.hpp"
using namespace std;

/**
 * This file is generated by leetcode_add.py
 *
 * 516.
 *      Longest Palindromic Subsequence
 *
 * ––––––––––––––––––––––––––––– Description –––––––––––––––––––––––––––––
 *
 *   Given a string ‘s’ , find “the longest palindromic “subsequence” 's
 *   length in” ‘s’
 *   A “subsequence” is a sequence that can be derived from another
 *   sequence by deleting some or no elements without changing the order of
 *   the remaining elements.
 *
 * ––––––––––––––––––––––––––––– Constraints –––––––––––––––––––––––––––––
 *
 *   • ‘1 ≤ s.length ≤ 1000’
 *   • ‘s’ consists only of lowercase English letters.
 *
 */

TEST(q516, sample_input01) {
  l516::Solution solver;
  string s = "bbbab";
  int exp = 4;
  EXPECT_EQ(solver.longestPalindromeSubseq(s), exp);
}

TEST(q516, sample_input02) {
  l516::Solution solver;
  string s = "cbbd";
  int exp = 2;
  EXPECT_EQ(solver.longestPalindromeSubseq(s), exp);
}

#endif