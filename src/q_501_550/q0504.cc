#include <gtest/gtest.h>
#include <iostream>
#include <string>
#include <vector>

using namespace std;

/**
 * This file is generated by leetcode_add.py
 *
 * 504.
 *      Base 7
 *
 * ––––––––––––––––––––––––––––– Description –––––––––––––––––––––––––––––
 *
 *   Given an integer ‘num’ , return “a string of its “base 7”
 *   representation” .
 *
 * ––––––––––––––––––––––––––––– Constraints –––––––––––––––––––––––––––––
 *
 *   • ‘-10⁷ ≤ num ≤ 10⁷’
 *
 */

struct q504 : public ::testing::Test {
  // Leetcode answer here
  class Solution {
   private:
    vector<int> generatePowerOfSeven(int n) {
      vector<int> res;
      for (int i = 7; i <= n; i *= 7) {
        res.emplace_back(i);
      }
      return res;
    }

   public:
    string convertToBase7(int num) {
      string res = num < 0 ? "-" : "";
      num = abs(num);
      vector<int> power_seven = generatePowerOfSeven(num);
      for (auto it = power_seven.rbegin(); it != power_seven.rend(); ++it) {
        res.push_back('0' + (num / *it));
        num %= *it;
      }
      res.push_back('0' + num);
      return res;
    }
  };

  class Solution *solution;
};

TEST_F(q504, sample_input01) {
  solution = new Solution();
  int num = 100;
  string exp = "202";
  string act = solution->convertToBase7(num);
  EXPECT_EQ(act, exp);
  delete solution;
}

TEST_F(q504, sample_input02) {
  solution = new Solution();
  int num = -7;
  string exp = "-10";
  string act = solution->convertToBase7(num);
  EXPECT_EQ(act, exp);
  delete solution;
}