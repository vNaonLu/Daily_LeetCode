
#ifndef Q542_UNITTEST_H__
#define Q542_UNITTEST_H__
#include <gtest/gtest.h>

#include "q0542.hpp"
using namespace std;

/**
  * this file is generated by gquestion.py
  *
  * 542. 01 Matrix
  *
  * Given an m x n binary matrix mat , return the
  * distance of the nearest 0 for each cell .
  * The distance between two adjacent cells is 1 .
  *
  * Constraints:
  * -  m == mat.length 
  * -  n == mat[i].length 
  * -  1 <= m, n <= 10^(4) 
  * -  1 <= m * n <= 10^(4) 
  * -  mat[i][j] is either 0 or 1 .
  * - There is at least one 0 in mat .
  *
*/

TEST(q542, sample_input01) {
  vector<vector<int>> mat = {{0, 0, 0}, {0, 1, 0}, {0, 0, 0}};
  vector<vector<int>> exp = {{0, 0, 0}, {0, 1, 0}, {0, 0, 0}};
  l542::Solution solver;
  EXPECT_EQ(solver.updateMatrix(mat), exp);
}

TEST(q542, sample_input02) {
  vector<vector<int>> mat = {{0, 0, 0}, {0, 1, 0}, {1, 1, 1}};
  vector<vector<int>> exp = {{0, 0, 0}, {0, 1, 0}, {1, 2, 1}};
  l542::Solution solver;
  EXPECT_EQ(solver.updateMatrix(mat), exp);
}

#endif