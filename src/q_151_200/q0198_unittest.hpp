
#ifndef Q198_UNITTEST_H__
#define Q198_UNITTEST_H__
#include <gtest/gtest.h>

#include "q0198.hpp"
using namespace std;

/**
  * this file is generated by gquestion.py
  *
  * 198. House Robber
  *
  * You are a professional robber planning to rob
  * houses along a street. Each house has a certain
  * amount of money stashed, the only constraint stopping
  * you from robbing each of them is that adjacent
  * houses have security systems connected and  “it will
  * automatically contact the police if two adjacent
  * houses were broken into on the same night” .
  * Given an integer array nums representing the
  * amount of money of each house, return the maximum
  * amount of money you can rob tonight  “without alerting
  * the police” .
  *
  * Constraints:
  * -  1 <= nums.length <= 100 
  * -  0 <= nums[i] <= 400 
  *
*/

TEST(q198, sample_input01) {
  vector<int> nums = {1, 2, 3, 1};
  int exp = 4;
  l198::Solution solver;
  EXPECT_EQ(solver.rob(nums), exp);
}

TEST(q198, sample_input02) {
  vector<int> nums = {2, 7, 9, 3, 1};
  int exp = 12;
  l198::Solution solver;
  EXPECT_EQ(solver.rob(nums), exp);
}

#endif