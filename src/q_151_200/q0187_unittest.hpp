
#ifndef Q187_UNITTEST_H__
#define Q187_UNITTEST_H__
#include <gtest/gtest.h>

#include "q0187.hpp"
using namespace std;

/**
  * This file is generated by leetcode_add.py
  *
  * #187
  *      Repeated DNA Sequences
  *
  *============================= Description =============================
  *
  *   The “DNA sequence” is composed of a series of nucleotides abbreviated
  *   as ‘'A'‘ , ‘'C'‘ , ‘'G'‘ , and ‘'T'‘.
  *   
  *   - For example, ‘"ACGAATTCCG"‘ is a “DNA sequence”.
  *   
  *   When studying “DNA” , it is useful to identify repeated sequences
  *   within the DNA.
  *   
  *   Given a string ‘s‘ that represents a “DNA sequence” , return all the “
  *   ‘10‘ -letter-long” sequences (substrings) that occur more than once in
  *   a DNA molecule. You may return the answer in “any order”.
  *
  * ============================= Constraints =============================
  *
  *   • ‘1 <= s.length <= 10^(5)‘
  *   • ‘s[i]‘ is either ‘'A'‘ , ‘'C'‘ , ‘'G'‘ , or ‘'T'‘ .
  *
*/

TEST(q187, sample_input01) {
  l187::Solution solver;
  string s = "AAAAACCCCCAAAAACCCCCCAAAAAGGGTTT";
  vector<string> exp = {"CCCCCAAAAA", "AAAAACCCCC"};
  EXPECT_EQ(solver.findRepeatedDnaSequences(s), exp);
}

TEST(q187, sample_input02) {
  l187::Solution solver;
  string s = "AAAAAAAAAAAAA";
  vector<string> exp = {"AAAAAAAAAA"};
  EXPECT_EQ(solver.findRepeatedDnaSequences(s), exp);
}

#endif