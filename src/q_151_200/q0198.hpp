
#ifndef LEETCODE_Q198_H__
#define LEETCODE_Q198_H__
#include <iostream>
#include <vector>

namespace l198 {
using namespace std;

/**
  * this file is generated by gquestion.py
  *
  * 198. House Robber
  *
  * You are a professional robber planning to rob
  * houses along a street. Each house has a certain
  * amount of money stashed, the only constraint stopping
  * you from robbing each of them is that adjacent
  * houses have security systems connected and  “it will
  * automatically contact the police if two adjacent
  * houses were broken into on the same night” .
  * Given an integer array nums representing the
  * amount of money of each house, return the maximum
  * amount of money you can rob tonight  “without alerting
  * the police” .
  *
  * Constraints:
  * -  1 <= nums.length <= 100 
  * -  0 <= nums[i] <= 400 
  *
*/
class Solution {
 public:
  int rob(vector<int>& nums) {
    vector<int> dp(nums.size() + 1, 0);
    dp[1] = nums[0];
    for (int i = 2; i < nums.size() + 1; ++i) {
      dp[i] = max(nums[i - 1] + dp[i - 2], dp[i - 1]);
    }
    return dp.back();
  }
};
}  // namespace l198
#endif