
#ifndef LEETCODE_Q1328_H__
#define LEETCODE_Q1328_H__
#include <iostream>
#include <string>

namespace l1328 {
using namespace std;

/**
  * this file is generated by gquestion.py
  *
  * 1328. Break a Palindrome
  * Given a palindromic string of lowercase English
  * letters palindrome , replace “exactly one“
  * character with any lowercase English letter so that the
  * resulting string is “not“ a palindrome and that it
  * is the “lexicographically smallest“ one possible.
  * Return the resulting string. If there is no way
  * to replace a character to make it not a palindrome,
  * return an “empty string“ . 
  * A string a is lexicographically smaller than a
  * string b (of the same length) if in the first
  * position where a and b differ, a has a character
  * strictly smaller than the corresponding character in b .
  * For example, "abcc" is lexicographically smaller
  * than "abcd" because the first position they differ
  * is at the fourth character, and ';c'; is smaller
  * than ';d'; .
  *
  * Constraints:
  * -  1 <= palindrome.length <= 1000 
  * -  palindrome consists of only lowercase English letters.
  *
*/
class Solution {
 public:
  string breakPalindrome(string palindrome) {
    if (palindrome.empty()) return "";
    if (palindrome.size() == 1) return "";

    for (int i = 0; i < palindrome.size() / 2; ++i) {
      if (palindrome[i] != 'a') {
        palindrome[i] = 'a';
        break;
      }
      if (i == palindrome.size() / 2 - 1)
        palindrome[palindrome.size() - 1] = 'b';
    }

    return palindrome;
  }
};
}  // namespace l1328
#endif