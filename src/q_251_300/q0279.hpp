
#ifndef LEETCODE_Q279_H__
#define LEETCODE_Q279_H__
#include <iostream>
#include <vector>

namespace l279 {
using namespace std;

/**
  * This file is generated by leetcode_add.py
  *
  * 279.
  *      Perfect Squares
  *
  * ––––––––––––––––––––––––––––– Description –––––––––––––––––––––––––––––
  *
  *   Given an integer ‘n’ , return “the least number of perfect square
  *   numbers that sum to” ‘n’
  *   A “perfect square” is an integer that is the square of an integer; in
  *   other words, it is the product of some integer with itself. For
  *   example, ‘1’ , ‘4’ , ‘9’ , and ‘16’ are perfect squares while ‘3’ and
  *   ‘11’ are not.
  *
  * ––––––––––––––––––––––––––––– Constraints –––––––––––––––––––––––––––––
  *
  *   • ‘1 ≤ n ≤ 10⁴’
  *
*/

class Solution {
 private:
  vector<int> dp;
  int helper(int n) {
    if (dp[n] != 0) return dp[n];

    int res = n;
    for (int i = 1; i * i <= n; ++i)
      res = min(res, helper(n - i * i) + 1);

    dp[n] = res;
    return res;
  }

 public:
  int numSquares(int n) {
    dp.resize(n + 1, 0);
    dp[0] = 0;
    dp[1] = 1;
    return helper(n);
  }
};
}  // namespace l279

#endif