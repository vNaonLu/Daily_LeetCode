
#ifndef LEETCODE_Q279_H__
#define LEETCODE_Q279_H__
#include <iostream>
#include <limits>
#include <vector>

namespace l279 {
using namespace std;

/**
 * This file is generated by leetcode_add.py
 *
 * 279.
 *      Perfect Squares
 *
 * ––––––––––––––––––––––––––––– Description –––––––––––––––––––––––––––––
 *
 *   Given an integer ‘n’ , return “the least number of perfect square
 *   numbers that sum to” ‘n’
 *   A “perfect square” is an integer that is the square of an integer; in
 *   other words, it is the product of some integer with itself. For
 *   example, ‘1’ , ‘4’ , ‘9’ , and ‘16’ are perfect squares while ‘3’ and
 *   ‘11’ are not.
 *
 * ––––––––––––––––––––––––––––– Constraints –––––––––––––––––––––––––––––
 *
 *   • ‘1 ≤ n ≤ 10⁴’
 *
 */

class Solution {
 public:
  int numSquares(int n) {
    vector<int> dp(n + 1, numeric_limits<int>::max());
    dp[0] = 0;
    dp[1] = 1;
    for (int i = 2; i <= n; ++i) {
      for (int j = 1; j * j <= i; ++j) {
        dp[i] = min(dp[i], 1 + dp[i - j * j]);
      }
    }
    return dp.back();
  }
};
}  // namespace l279

#endif