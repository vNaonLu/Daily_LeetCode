
#ifndef Q290_UNITTEST_H__
#define Q290_UNITTEST_H__
#include <gtest/gtest.h>

#include "q0290.hpp"
using namespace std;

/**
  * This file is generated by leetcode_add.py
  *
  * 290. Word Pattern
  * Given a pattern and a string s , find if s
  * follows the same pattern.
  * Here  “follow”  means a full match, such that
  * there is a bijection between a letter in pattern and
  * a  “non-empty”  word in s .
  *
  * Constraints:
  * -  1 <= pattern.length <= 300 
  * -  pattern contains only lower-case English letters.
  * -  1 <= s.length <= 3000 
  * -  s contains only lower-case English letters and spaces '; '; .
  * -  s “does not contain” any leading or trailing spaces.
  * - All the words in s are separated by a “single space” .
  *
*/

TEST(q290, sample_input01) {
  string pattern = "abba",
         s = "dog cat cat dog";
  bool exp = true;
  l290::Solution solver;
  EXPECT_EQ(solver.wordPattern(pattern, s), exp);
}

TEST(q290, sample_input02) {
  string pattern = "abba",
         s = "dog cat cat fish";
  bool exp = false;
  l290::Solution solver;
  EXPECT_EQ(solver.wordPattern(pattern, s), exp);
}

TEST(q290, sample_input03) {
  string pattern = "aaaa",
         s = "dog cat cat dog";
  bool exp = false;
  l290::Solution solver;
  EXPECT_EQ(solver.wordPattern(pattern, s), exp);
}

TEST(q290, sample_input04) {
  string pattern = "abba",
         s = "dog dog dog dog";
  bool exp = false;
  l290::Solution solver;
  EXPECT_EQ(solver.wordPattern(pattern, s), exp);
}

#endif