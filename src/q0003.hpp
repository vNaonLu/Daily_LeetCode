
#ifndef LEETCODE_Q3_H__
#define LEETCODE_Q3_H__
#include <iostream>
#include <string>
#include <unordered_map>

namespace l3 {
using namespace std;

/**
  * this file is generated by gquestion.py
  *
  * 3. Longest Substring Without Repeating Characters
  *
  * Given a string s , find the length of the 
  * “longest substring”  without repeating characters.
  *
  * Constraints:
  * -  0 <= s.length <= 5 * 10^(4) 
  * -  s consists of English letters, digits, symbols and spaces.
  *
*/
class Solution {
 public:
  int lengthOfLongestSubstring(string s) {
    int res = 0;
    unordered_map<char, int> last_idx;  //char to index
    int j = 0;

    for (int i = 0; i < s.size(); i++) {
      if (last_idx.count(s[i])) {
        j = max(j, last_idx[s[i]] + 1);
      }
      res = max(res, i - j + 1);
      last_idx[s[i]] = i;
    }

    return res;
  }
};
}  // namespace l3
#endif