#include <gtest/gtest.h>
#include <iostream>
#include <numeric>

using namespace std;

/**
 * This file is generated by leetcode_add.py
 *
 * 2427.
 *       Number of Common Factors
 *
 * ––––––––––––––––––––––––––––– Description –––––––––––––––––––––––––––––
 *
 *   Given two positive integers ‘a’ and ‘b’ , return “the number of
 *   “common” factors of ” ‘a’ “ and ” ‘b’
 *   An integer ‘x’ is a “common factor” of ‘a’ and ‘b’ if ‘x’ divides both
 *   ‘a’ and ‘b’ .
 *
 * ––––––––––––––––––––––––––––– Constraints –––––––––––––––––––––––––––––
 *
 *   • ‘1 ≤ a, b ≤ 1000’
 *
 */

struct q2427 : public ::testing::Test {
  // Leetcode answer here
  class Solution {
  public:
    int commonFactors(int a, int b) {
      auto x   = gcd(a, b);
      int  res = 0;
      for (int i = 1; i <= x; ++i) {
        if (x % i == 0) {
          ++res;
        }
      }
      return res;
    }
  };

  class Solution *solution;
};

TEST_F(q2427, sample_input01) {
  solution = new Solution();
  int a    = 12;
  int b    = 6;
  int exp  = 4;
  int act  = solution->commonFactors(a, b);
  EXPECT_EQ(act, exp);
  delete solution;
}

TEST_F(q2427, sample_input02) {
  solution = new Solution();
  int a    = 25;
  int b    = 30;
  int exp  = 2;
  int act  = solution->commonFactors(a, b);
  EXPECT_EQ(act, exp);
  delete solution;
}
