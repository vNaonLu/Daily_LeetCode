
#ifndef Q739_UNITTEST_H__
#define Q739_UNITTEST_H__
#include <gtest/gtest.h>

#include "q0739.hpp"
using namespace std;

/**
 * This file is generated by leetcode_add.py
 *
 * 739.
 *      Daily Temperatures
 *
 * ––––––––––––––––––––––––––––– Description –––––––––––––––––––––––––––––
 *
 *   Given an array of integers ‘temperatures’ represents the daily
 *   temperatures, return “an array” ‘answer’ “such that” ‘answer[i]’ “is
 *   the number of days you have to wait after the” ‘iᵗʰ’ “day to get a
 *   warmer temperature” . If there is no future day for which this is
 *   possible, keep ‘answer[i] = 0’ instead.
 *
 * ––––––––––––––––––––––––––––– Constraints –––––––––––––––––––––––––––––
 *
 *   • ‘1 ≤temperatures.length ≤ 10⁵’
 *   • ‘30 ≤temperatures[i] ≤ 100’
 *
 */

TEST(q739, sample_input01) {
  l739::Solution solver;
  vector<int> temperatures = {73, 74, 75, 71, 69, 72, 76, 73};
  vector<int> exp = {1, 1, 4, 2, 1, 1, 0, 0};
  EXPECT_EQ(solver.dailyTemperatures(temperatures), exp);
}

TEST(q739, sample_input02) {
  l739::Solution solver;
  vector<int> temperatures = {30, 40, 50, 60};
  vector<int> exp = {1, 1, 1, 0};
  EXPECT_EQ(solver.dailyTemperatures(temperatures), exp);
}

TEST(q739, sample_input03) {
  l739::Solution solver;
  vector<int> temperatures = {30, 60, 90};
  vector<int> exp = {1, 1, 0};
  EXPECT_EQ(solver.dailyTemperatures(temperatures), exp);
}

#endif