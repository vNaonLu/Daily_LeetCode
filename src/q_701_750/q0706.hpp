
#ifndef LEETCODE_Q706_H__
#define LEETCODE_Q706_H__
#include <iostream>

namespace l706 {
using namespace std;

/**
  * this file is generated by gquestion.py
  *
  * 706. Design HashMap
  *
  * Design a HashMap without using any built-in hash
  * table libraries.
  * Implement the MyHashMap class:
  * -  MyHashMap() initializes the object with an
  * empty map.
  * -  void put(int key, int value) inserts a (key,
  * value) pair into the HashMap. If the key already
  * exists in the map, update the corresponding value .
  * -  int get(int key) returns the value to which
  * the specified key is mapped, or -1 if this map
  * contains no mapping for the key .
  * -  void remove(key) removes the key and its
  * corresponding value if the map contains the mapping for
  * the key .
  *
  * Constraints:
  * -  0 <= key, value <= 10^(6) 
  * - At most 10^(4) calls will be made to put , get , and remove .
  *
*/
class MyHashMap {
 private:
  int data_[1000001];

 public:
  /** Initialize your data structure here. */
  MyHashMap() {
    memset(data_, -1, sizeof(data_));
  }

  /** value will always be non-negative. */
  void put(int key, int value) {
    data_[key] = value;
  }

  /** Returns the value to which the specified key is mapped, or -1 if this map contains no mapping for the key */
  int get(int key) {
    return data_[key];
  }

  /** Removes the mapping of the specified value key if this map contains a mapping for the key */
  void remove(int key) {
    data_[key] = -1;
  }
};

/**
 * Your MyHashMap object will be instantiated and called as such:
 * MyHashMap* obj = new MyHashMap();
 * obj->put(key,value);
 * int param_2 = obj->get(key);
 * obj->remove(key);
 */
}  // namespace l706
#endif