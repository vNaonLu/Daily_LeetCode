
#ifndef LEETCODE_Q739_H__
#define LEETCODE_Q739_H__
#include <iostream>
#include <stack>
#include <vector>

namespace l739 {
using namespace std;

/**
 * This file is generated by leetcode_add.py
 *
 * 739.
 *      Daily Temperatures
 *
 * ––––––––––––––––––––––––––––– Description –––––––––––––––––––––––––––––
 *
 *   Given an array of integers ‘temperatures’ represents the daily
 *   temperatures, return “an array” ‘answer’ “such that” ‘answer[i]’ “is
 *   the number of days you have to wait after the” ‘iᵗʰ’ “day to get a
 *   warmer temperature” . If there is no future day for which this is
 *   possible, keep ‘answer[i] = 0’ instead.
 *
 * ––––––––––––––––––––––––––––– Constraints –––––––––––––––––––––––––––––
 *
 *   • ‘1 ≤temperatures.length ≤ 10⁵’
 *   • ‘30 ≤temperatures[i] ≤ 100’
 *
 */

class Solution {
 public:
  vector<int> dailyTemperatures(vector<int>& temperatures) {
    vector<int> res(temperatures.size(), 0);
    stack<int> stack;
    int wait = 1;
    for (int i = 0; i < temperatures.size(); ++i) {
      int cur = temperatures[i];
      while (!stack.empty() &&
             temperatures[stack.top()] < cur) {
        res[stack.top()] = i - stack.top();
        stack.pop();
      }
      stack.push(i);
    }
    return res;
  }
};
}  // namespace l739

#endif