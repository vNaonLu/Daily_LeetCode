
#ifndef Q717_UNITTEST_H__
#define Q717_UNITTEST_H__
#include <gtest/gtest.h>

#include "q0717.hpp"
using namespace std;

/**
  * This file is generated by leetcode_add.py
  *
  * 717.
  *      1-bit and 2-bit Characters
  *
  * ––––––––––––––––––––––––––––– Description –––––––––––––––––––––––––––––
  *
  *   We have two special.
  *   
  *   - The first character can be represented by one bit ‘0’.
  *   
  *   - The second character can be represented by two bits ( ‘10’ or ‘11’
  *   ).
  *   
  *   Given a binary array ‘bits’ that ends with ‘0’ , return ‘true’ if the
  *   last character must be a one-bit character.
  *
  * ––––––––––––––––––––––––––––– Constraints –––––––––––––––––––––––––––––
  *
  *   • ‘1 ≤ bits.length ≤ 1000’
  *   • ‘bits[i]’ is either ‘0’ or ‘1’ .
  *
*/

TEST(q717, sample_input01) {
  l717::Solution solver;
  vector<int> bits = {1, 0, 0};
  bool exp = true;
  EXPECT_EQ(solver.isOneBitCharacter(bits), exp);
}

TEST(q717, sample_input02) {
  l717::Solution solver;
  vector<int> bits = {1, 1, 1, 0};
  bool exp = false;
  EXPECT_EQ(solver.isOneBitCharacter(bits), exp);
}

#endif