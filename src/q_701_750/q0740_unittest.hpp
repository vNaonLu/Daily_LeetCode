
#ifndef Q740_UNITTEST_H__
#define Q740_UNITTEST_H__
#include <gtest/gtest.h>

#include "q0740.hpp"
using namespace std;

/**
  * This file is generated by leetcode_add.py
  *
  * 740.
  *      Delete and Earn
  *
  * ––––––––––––––––––––––––––––– Description –––––––––––––––––––––––––––––
  *
  *   You are given an integer array ‘nums’ . You want to maximize the
  *   number of points you get by performing the following operation any
  *   number of.
  *   
  *   - Pick any ‘nums[i]’ and delete it to earn ‘nums[i]’ points.
  *   Afterwards, you must delete “every” element equal to ‘nums[i] - 1’ and
  *   “every” element equal to ‘nums[i] + 1’.
  *   
  *   Return “the “maximum number of points” you can earn by applying the
  *   above operation some number of times”.
  *
  * ––––––––––––––––––––––––––––– Constraints –––––––––––––––––––––––––––––
  *
  *   • ‘1 ≤ nums.length ≤ 2 × 10⁴’
  *   • ‘1 ≤ nums[i] ≤ 10⁴’
  *
*/

TEST(q740, sample_input01) {
  l740::Solution solver;
  vector<int> nums = {3, 4, 2};
  int exp = 6;
  EXPECT_EQ(solver.deleteAndEarn(nums), exp);
}

TEST(q740, sample_input02) {
  l740::Solution solver;
  vector<int> nums = {2, 2, 3, 3, 3, 4};
  int exp = 9;
  EXPECT_EQ(solver.deleteAndEarn(nums), exp);
}

#endif