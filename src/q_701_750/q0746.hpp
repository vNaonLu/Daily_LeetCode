
#ifndef LEETCODE_Q746_H__
#define LEETCODE_Q746_H__
#include <iostream>
#include <vector>

namespace l746 {
using namespace std;

/**
  * This file is generated by leetcode_add.py
  *
  * 746.
  *      Min Cost Climbing Stairs
  *
  * ––––––––––––––––––––––––––––– Description –––––––––––––––––––––––––––––
  *
  *   You are given an integer array ‘cost’ where ‘cost[i]’ is the cost of
  *   ‘iᵗʰ’ step on a staircase. Once you pay the cost, you can either climb
  *   one or two steps.
  *   
  *   You can either start from the step with index ‘0’ , or the step with
  *   index ‘1’.
  *   
  *   Return “the minimum cost to reach the top of the floor”.
  *
  * ––––––––––––––––––––––––––––– Constraints –––––––––––––––––––––––––––––
  *
  *   • ‘2 ≤ cost.length ≤ 1000’
  *   • ‘0 ≤ cost[i] ≤ 999’
  *
*/

class Solution {
 public:
  int minCostClimbingStairs(vector<int>& cost) {
    vector<int> dp(cost.size() + 1, 0);
    for (int i = 2; i < dp.size(); ++i)
      dp[i] = min(dp[i - 1] + cost[i - 1], dp[i - 2] + cost[i - 2]);
    return dp.back();
  }
};
}  // namespace l746

#endif