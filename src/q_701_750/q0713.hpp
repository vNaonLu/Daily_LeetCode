
#ifndef LEETCODE_Q713_H__
#define LEETCODE_Q713_H__
#include <iostream>
#include <vector>

namespace l713 {
using namespace std;

/**
  * this file is generated by gquestion.py
  *
  * 713. Subarray Product Less Than K
  * Given an array of integers nums and an integer k
  * , return the number of contiguous subarrays where
  * the product of all the elements in the subarray is
  * strictly less than k .
  *
  * Constraints:
  * -  1 <= nums.length <= 3 * 10^(4) 
  * -  1 <= nums[i] <= 1000 
  * -  0 <= k <= 10^(6) 
  *
*/
class Solution {
 public:
  int numSubarrayProductLessThanK(vector<int>& nums, int k) {
    if (k <= 1) return 0;
    int res = 0;
    int product = 1;
    int r = 0, l = 0;
    for (; r < nums.size(); ++r) {
      product *= nums[r];
      while (product >= k) product /= nums[l++];
      res += r - l + 1;
    }
    return res;
  }
};
}  // namespace l713
#endif