
#ifndef Q746_UNITTEST_H__
#define Q746_UNITTEST_H__
#include <gtest/gtest.h>

#include "q0746.hpp"
using namespace std;

/**
  * This file is generated by leetcode_add.py
  *
  * 746.
  *      Min Cost Climbing Stairs
  *
  * ––––––––––––––––––––––––––––– Description –––––––––––––––––––––––––––––
  *
  *   You are given an integer array ‘cost’ where ‘cost[i]’ is the cost of
  *   ‘iᵗʰ’ step on a staircase. Once you pay the cost, you can either climb
  *   one or two steps.
  *   
  *   You can either start from the step with index ‘0’ , or the step with
  *   index ‘1’.
  *   
  *   Return “the minimum cost to reach the top of the floor”.
  *
  * ––––––––––––––––––––––––––––– Constraints –––––––––––––––––––––––––––––
  *
  *   • ‘2 ≤ cost.length ≤ 1000’
  *   • ‘0 ≤ cost[i] ≤ 999’
  *
*/

TEST(q746, sample_input01) {
  l746::Solution solver;
  vector<int> cost = {10, 15, 20};
  int exp = 15;
  EXPECT_EQ(solver.minCostClimbingStairs(cost), exp);
}

TEST(q746, sample_input02) {
  l746::Solution solver;
  vector<int> cost = {1, 100, 1, 1, 1, 100, 1, 1, 100, 1};
  int exp = 6;
  EXPECT_EQ(solver.minCostClimbingStairs(cost), exp);
}

#endif