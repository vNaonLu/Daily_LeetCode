
#ifndef LEETCODE_Q1239_H__
#define LEETCODE_Q1239_H__
#include <iostream>
#include <string>
#include <unordered_set>
#include <vector>

namespace l1239 {
using namespace std;

/**
  * this file is generated by gquestion.py
  *
  * 1239. Maximum Length of a Concatenated String with Unique Characters
  *
  * Given an array of strings arr . String s is a
  * concatenation of a sub-sequence of arr which have
  * “unique characters“ .
  * Return the maximum possible length of s .
  *
  * Constraints:
  * -  1 <= arr.length <= 16 
  * -  1 <= arr[i].length <= 26 
  * -  arr[i] contains only lower case English letters.
  *
*/
class Solution {
 public:
  int maxLength(vector<string>& arr) {
    int res = 0;
    vector<string> combine = {""};
    for (string& w : arr) {
      int length = combine.size();
      for (int i = 0; i < length; ++i) {
        string str = combine[i] + w;
        unordered_set<char> str_set(str.begin(), str.end());
        if (str_set.size() != str.size()) continue;
        combine.push_back(str);
        res = max(res, (int)str.size());
      }
    }
    return res;
  }
};
}  // namespace l1239
#endif