
#ifndef Q1239_UNITTEST_H__
#define Q1239_UNITTEST_H__
#include <gtest/gtest.h>

#include "q1239.hpp"
using namespace std;

/**
  * this file is generated by gquestion.py
  *
  * 1239. Maximum Length of a Concatenated String with Unique Characters
  *
  * Given an array of strings arr . String s is a
  * concatenation of a sub-sequence of arr which have
  * “unique characters“ .
  * Return the maximum possible length of s .
  *
  * Constraints:
  * -  1 <= arr.length <= 16 
  * -  1 <= arr[i].length <= 26 
  * -  arr[i] contains only lower case English letters.
  *
*/

TEST(q1239, sample_input01) {
  vector<string> arr = {"un", "iq", "ue"};
  int exp = 4;
  l1239::Solution solver;
  EXPECT_EQ(solver.maxLength(arr), exp);
}

TEST(q1239, sample_input02) {
  vector<string> arr = {"cha", "r", "act", "ers"};
  int exp = 6;
  l1239::Solution solver;
  EXPECT_EQ(solver.maxLength(arr), exp);
}

TEST(q1239, sample_input03) {
  vector<string> arr = {"abcdefghijklmnopqrstuvwxyz"};
  int exp = 26;
  l1239::Solution solver;
  EXPECT_EQ(solver.maxLength(arr), exp);
}

#endif