#include <gtest/gtest.h>
#include <iostream>
#include <string>

using namespace std;

/**
 * This file is generated by leetcode_add.py
 *
 * 1556.
 *       Thousand Separator
 *
 * ––––––––––––––––––––––––––––– Description –––––––––––––––––––––––––––––
 *
 *   Given an integer ‘n’ , add a dot ('.') as the thousands separator and
 *   return it in string format.
 *
 * ––––––––––––––––––––––––––––– Constraints –––––––––––––––––––––––––––––
 *
 *   • ‘0 ≤ n ≤ 2³¹ - 1’
 *
 */

struct q1556 : public ::testing::Test {
  // Leetcode answer here
  class Solution {
  public:
    string thousandSeparator(int n) {
      auto res   = string("");
      auto digit = (int)0;
      do {
        if (digit && (digit % 3) == 0) {
          res.push_back('.');
        }
        res.push_back('0' + (n % 10));
        n /= 10;
        ++digit;
      } while (n != 0);

      reverse(res.begin(), res.end());
      return res;
    }
  };

  class Solution *solution;
};

TEST_F(q1556, sample_input01) {
  solution   = new Solution();
  int    n   = 987;
  string exp = "987";
  string act = solution->thousandSeparator(n);
  EXPECT_EQ(act, exp);
  delete solution;
}

TEST_F(q1556, sample_input02) {
  solution   = new Solution();
  int    n   = 1234;
  string exp = "1.234";
  string act = solution->thousandSeparator(n);
  EXPECT_EQ(act, exp);
  delete solution;
}
