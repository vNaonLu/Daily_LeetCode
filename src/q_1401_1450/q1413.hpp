
#ifndef LEETCODE_Q1413_H__
#define LEETCODE_Q1413_H__
#include <iostream>
#include <vector>

namespace l1413 {
using namespace std;

/**
 * This file is generated by leetcode_add.py
 *
 * 1413.
 *       Minimum Value to Get Positive Step by Step Sum
 *
 * ––––––––––––––––––––––––––––– Description –––––––––––––––––––––––––––––
 *
 *   Given an array of integers ‘nums’ , you start with an initial
 *   “positive” value “startValue”  “.”
 *   In each iteration, you calculate the step by step sum of “startValue”
 *   pluselements in ‘nums’ (from left to
 *   Return the minimum “positive” value of “startValue” such that the step
 *   by step sum is never less than
 *   
 *
 * ––––––––––––––––––––––––––––– Constraints –––––––––––––––––––––––––––––
 *
 *   • ‘1 ≤ nums.length ≤ 100’
 *   • ‘-100 ≤ nums[i] ≤ 100’
 *
 */

class Solution {
 public:
  int minStartValue(vector<int>& nums) {
    int res = 1;
    int current = res;
    for (const auto& x : nums) {
      int next = current + x;
      if (next < 1) {
        res += 1 - next;
        current = 1;
      } else {
        current = next;
      }
    }
    return res;
  }
};
}  // namespace l1413

#endif