#!/usr/bin/python3
import sys
import os
import re
import math
import pathlib
import subprocess
from utils import leetcode, template, modify

if((len(sys.argv) - 2) % 3):
    print("[Usage] <question number>")
else:
    gen = os.path.basename(__file__)
    quest_num = str(int(sys.argv[1]))
    project_path = pathlib.Path(__file__).parent.parent.resolve()
    interval_name = leetcode.get_question_id_path(int(quest_num))
    source_root_path = os.path.join(project_path, "src")
    source_path = os.path.join(source_root_path, interval_name)
    source_name = "q{}.hpp".format(quest_num.rjust(4, '0'))
    source = os.path.join(source_path, source_name)
    unittest_name = "q{}_unittest.hpp".format(quest_num.rjust(4, '0'))
    unittest = os.path.join(source_path, unittest_name)

    if os.path.exists(source):
        print("[-] file exist: {}".format(source))
    elif os.path.exists(unittest):
        print("[-] file exist: {}".format(unittest))
    else:
        desc = leetcode.get_description(
            int(quest_num), "this file is generated by {}".format(gen))
        if desc != None:
            utindex = os.path.join(source_path, "unittest.hpp")
            if not os.path.isdir(source_path):
                os.makedirs(source_path)
                print("[+] create directory: {}".format(source_path))
                template.generate_intv_unittest(utindex, interval_name)
                modify.unittest(os.path.join(source_root_path, "unittest.cc"), quest_num, interval_name)

            template.generate_source(source, int(quest_num), desc)
            template.generate_unittest(unittest, int(quest_num), desc)

            modify.subunittest(utindex, unittest_name)

            subprocess.run(["code", source])
            subprocess.run(["code", unittest])

        else:
            print(
                "[-] question #{} need plus account or does not exist.".format(quest_num))
            sys.exit()
